########################################################################
# This software is provided by the author and contributors ``as is'' 
# and any express or implied warranties, including, but not limited to, 
# the implied warranties of merchantability and fitness for a particular 
# purpose are disclaimed. In no event shall the author or contributors 
# be liable for any direct, indirect, incidental, special, exemplary, 
# or consequential damages (including, but not limited to, procurement 
# of substitute goods or services; loss of use, data, or profits; or 
# business interruption) however caused and on any theory of liability, 
# whether in contract, strict liability, or tort (including negligence 
# or otherwise) arising in any way out of the use of this software, 
# even if advised of the possibility of such damage.
#
#   File: Makedefines
#
# Author: $author$
#   Date: 3/16/2012
#
# MacOSX Gcc Makefile defines
########################################################################

ifndef BUILD_TYPE
BUILD_TYPE = Debug
endif

ifeq ($(BUILD_TYPE),Debug)
DBGFLAGS = -D_DEBUG -g
else
DBGFLAGS = -D_RELEASE
endif

ifndef BLD
BLD = build/macosx
endif

PKGROOT		=	$(PKG)
PKGBLD      =   $(PKG)/$(BLD)/$(BUILD_TYPE)
BINDIR		=	$(PKGBLD)/bin
LIBDIR		=	$(PKGBLD)/lib

COMPILER_PATH = 
COMPILER_PREFIX = 

KCOMPILER_PATH = 
KCOMPILER_PREFIX = 

MXDE_INCLUDES = \
-I$(PKG)/../../mxde/c/src/clib/cx11/cxm/cplatform \
-I$(PKG)/../../mxde/c/src/clib/cx11/cxm \
-I$(PKG)/../../mxde/c/src/clib/cx11/cxaw/cplatform \
-I$(PKG)/../../mxde/c/src/clib/cx11/cxaw \
-I$(PKG)/../../mxde/c/src/clib/cx11/cxt/cplatform \
-I$(PKG)/../../mxde/c/src/clib/cx11/cxt \
-I$(PKG)/../../mxde/c/src/clib/cx11/cplatform \
-I$(PKG)/../../mxde/c/src/clib/cx11 \
-I$(PKG)/../../mxde/c/src/clib/cgl/cplatform \
-I$(PKG)/../../mxde/c/src/clib/cgl \

INCLUDES	= \
-I$(PKG)/$(SRC)/lib/XosGui/XosOpenGL/XosMac \
-I$(PKG)/$(SRC)/lib/XosGui/XosOpenGL/Gtk \
-I$(PKG)/$(SRC)/lib/XosGui/XosOpenGL/Qt \
-I$(PKG)/$(SRC)/lib/XosGui/XosOpenGL/X11 \
-I$(PKG)/$(SRC)/lib/XosGui/XosOpenGL \
-I$(PKG)/$(SRC)/lib/XosGui/XosMac \
-I$(PKG)/$(SRC)/lib/XosGui/XosGtk \
-I$(PKG)/$(SRC)/lib/XosGui/XosQt \
-I$(PKG)/$(SRC)/lib/XosGui/XosX11 \
-I$(PKG)/$(SRC)/lib/XosGui \
-I$(PKG)/$(SRC)/lib/XosNetwork/XosMac \
-I$(PKG)/$(SRC)/lib/XosNetwork/XosUnix \
-I$(PKG)/$(SRC)/lib/XosNetwork \
-I$(PKG)/$(SRC)/lib/XosCore/XosThread/XosMac \
-I$(PKG)/$(SRC)/lib/XosCore/XosThread/XosUnix \
-I$(PKG)/$(SRC)/lib/XosCore/XosThread \
-I$(PKG)/$(SRC)/lib/XosPlatform \
-I$(PKG)/$(SRC)/lib/Generic/Platform \
-I$(PKG)/$(SRC)/lib/Generic \
-I$(PKG)/$(SRC)/lib/XosCore \
$(MXDE_INCLUDES) \

DEFINES		= $(DBGFLAGS)

#
# C
#
CC			=	$(COMPILER_PATH)$(COMPILER_PREFIX)gcc
CCLD		=	$(CC)
CCDSO		=	$(CCLD)
OPTIM		= -fpic
CFLAGS		= $(OPTIM) $(USRINCLUDES) $(INCLUDES) $(DEFINES) $(USRDEFINES) $(USRDEFS) $(OPTIONS) $(USRCFLAGS) $(USRFLAGS)

#
# C++
#
CXX			=	$(COMPILER_PATH)$(COMPILER_PREFIX)g++
CXXLD		=	$(CXX)
CXXDSO		=	$(CXXLD)
#CXXOPTIM    = -fno-rtti
CXXOPTIM    = 
CXXFLAGS	= $(OPTIM) $(CXXOPTIM) $(USRINCLUDES) $(INCLUDES) $(DEFINES) $(USRDEFINES) $(USRDEFS) $(OPTIONS) $(USRCXXFLAGS) $(USRFLAGS)

#
# Librarian
#
AR			=	$(COMPILER_PATH)$(COMPILER_PREFIX)ar
RANLIB		=	ranlib
STRIP		=	strip
LIBTOOL		=	
LIBEXT		=	dylib

#
# Filesystem
#
CHMOD		=	chmod
CP			=	cp
LN			=	ln -sf
MV			=	mv
RM			=	rm -f
MKDIR		=	mkdir -p
D2U		    =	dos2unix

DSOFLAGS	= -shared $(USRDSOFLAGS)
LDFLAGS		= -L$(LIBDIR) $(USRLIBDIRS) $(USRLDFLAGS) $(OPTIM) $(CXXOPTIM)
ARFLAGS		= crs $(USRARFLAGS)

OPTIONS := $(shell if [ "$(BUILD_TYPE)" = "Debug" ] ; then echo -g; fi)
STRIP := $(shell if [ "$(BUILD_TYPE)" = "Debug" ] ; then echo "@echo Not Stripping"; else echo strip; fi)

#
# Rules
#
.cpp.o:
	@echo Compiling $(BUILD_TYPE) $< ...
	@$(CXX) -c $(CXXFLAGS) -o $@ $< 

.cxx.o:
	@echo Compiling $(BUILD_TYPE) $< ...
	@$(CXX) -c $(CXXFLAGS) -o $@ $<

.cc.o:
	@echo Compiling $(BUILD_TYPE) $< ...
	@$(CXX) -c $(CXXFLAGS) -o $@ $<

.mm.o:
	@echo Compiling $(BUILD_TYPE) $< ...
	@$(CXX) -c $(CXXFLAGS) -o $@ $<

.c.o:
	@echo Compiling $(BUILD_TYPE) $< ...
	@$(CC) -c $(CFLAGS) -o $@ $<

.m.o:
	@echo Compiling $(BUILD_TYPE) $< ...
	@$(CC) -c $(CFLAGS) -o $@ $<

.S.o:
	@$(CC) -c -o $*.o $<  

.s.o:
	@$(AS) -o $*.o $<  

