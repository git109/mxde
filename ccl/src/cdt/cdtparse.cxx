#ifndef lint
static char yysccsid[] = "@(#)yaccpar 1.8++ (Berkeley) 01/20/90, (Boyd) 1998";
#endif
#define YYBYACC 1
#define YYCPLUSPLUS 1
#undef NULL
#include "cdtparse.h"
#include "cdtparser.hxx"
#define YY(on) if ((m_error = on())) return YYOnError(""#on""); else YYOn(""#on"")
#define YY2(on,name) if ((m_error = on(name))) return YYOnError(""#on"",name); else YYOn(""#on"",name)
#define XX_INCLUDE 257
#define XX_USING 258
#define XX_EXTERN 259
#define XX_FOREIGN 260
#define XX_NATIVE 261
#define XX_FRIEND 262
#define XX_PUBLIC 263
#define XX_PRIVATE 264
#define XX_PROTECTED 265
#define XX_CONST 266
#define XX_STATIC 267
#define XX_AUTO 268
#define XX_REGISTER 269
#define XX_VOLITILE 270
#define XX_INTERRUPT 271
#define XX_CDECL 272
#define XX_PASCAL 273
#define XX_PACKED 274
#define XX_PARALLEL 275
#define XX_REMOTE 276
#define XX_SHARED 277
#define XX_PURE 278
#define XX_VIRTUAL 279
#define XX_OPERATOR 280
#define XX_ABSOLUTE 281
#define XX_IO 282
#define XX_PROCESS 283
#define XX_MODULE 284
#define XX_MAIN 285
#define XX_THREAD 286
#define XX_SIGNAL 287
#define XX_CLASS 288
#define XX_NAMESPACE 289
#define XX_STRUCT 290
#define XX_UNION 291
#define XX_ARRAY 292
#define XX_SET 293
#define XX_STRING 294
#define XX_SIGNED 295
#define XX_UNSIGNED 296
#define XX_FLOAT 297
#define XX_VOID 298
#define XX_ENUM 299
#define XX_DOUBLE 300
#define XX_SHORT 301
#define XX_LONG 302
#define XX_INT 303
#define XX_CHAR 304
#define XX_BOOL 305
#define XX_TRUE 306
#define XX_FALSE 307
#define XX_WHAT 308
#define XX_AT 309
#define XX_IS 310
#define XX_SUPER 311
#define XX_THIS 312
#define XX_NEW 313
#define XX_DELETE 314
#define XX_POSITIONOF 315
#define XX_SIZEOF 316
#define XX_TYPEOF 317
#define XX_TEXTOF 318
#define XX_NAMESPACEOF 319
#define XX_NAMEOF 320
#define XX_PREFIXOF 321
#define XX_POSITIONIS 322
#define XX_SIZEIS 323
#define XX_TYPEIS 324
#define XX_TEXTIS 325
#define XX_NAMESPACEIS 326
#define XX_NAMEIS 327
#define XX_PREFIXIS 328
#define XX_TEMPLATE 329
#define XX_VARIABLE 330
#define XX_DO 331
#define XX_WHILE 332
#define XX_UNTIL 333
#define XX_REPEAT 334
#define XX_FOR 335
#define XX_EACH 336
#define XX_OF 337
#define XX_SWITCH 338
#define XX_CASE 339
#define XX_DEFAULT 340
#define XX_IF 341
#define XX_ELSE 342
#define XX_BEFORE 343
#define XX_AFTER 344
#define XX_WHEN 345
#define XX_GOTO 346
#define XX_BREAK 347
#define XX_CONTINUE 348
#define XX_RETURN 349
#define XX_TRY 350
#define XX_CATCH 351
#define XX_THROW 352
#define XX_WITH 353
#define XX_COLONCOLON_AND 354
#define XX_COLONCOLON_STAR 355
#define XX_COLONCOLON 356
#define XX_DOTDOT 357
#define XX_ELIPSIS 358
#define XX_BSLASHBSLASH_SHR 359
#define XX_BSLASHBSLASH_SHL 360
#define XX_BSLASHBSLASH 361
#define XX_BSLASHQUESTION 362
#define XX_DOTBSLASHQUESTION 363
#define XX_DOTQUESTION 364
#define XX_ATQUESTION 365
#define XX_PERCENT_LESS 366
#define XX_GREATER_PERCENT 367
#define XX_LESS_PERCENT 368
#define XX_PERCENT_GREATER 369
#define XX_ASSIGN 370
#define XX_LAND_ASSIGN 371
#define XX_LOR_ASSIGN 372
#define XX_LXOR_ASSIGN 373
#define XX_POW_ASSIGN 374
#define XX_ROO_ASSIGN 375
#define XX_LOG_ASSIGN 376
#define XX_SHR_ASSIGN 377
#define XX_SHL_ASSIGN 378
#define XX_ADD_ASSIGN 379
#define XX_SUB_ASSIGN 380
#define XX_MUL_ASSIGN 381
#define XX_DIV_ASSIGN 382
#define XX_MOD_ASSIGN 383
#define XX_QUO_ASSIGN 384
#define XX_AND_ASSIGN 385
#define XX_OR_ASSIGN 386
#define XX_XOR_ASSIGN 387
#define XX_RIGHT_OP 388
#define XX_LEFT_OP 389
#define XX_INC_OP 390
#define XX_DEC_OP 391
#define XX_COM_OP 392
#define XX_LCOM_OP 393
#define XX_LE_OP 394
#define XX_GE_OP 395
#define XX_NE_OP 396
#define XX_EQ_OP 397
#define XX_SHR_OP 398
#define XX_SHL_OP 399
#define XX_POW_OP 400
#define XX_ROO_OP 401
#define XX_LOG_OP 402
#define XX_LNOT_OP 403
#define XX_LAND_OP 404
#define XX_LOR_OP 405
#define XX_DEC_LITERAL 406
#define XX_BIN_LITERAL 407
#define XX_HEX_LITERAL 408
#define XX_OCT_LITERAL 409
#define XX_FLOAT_LITERAL 410
#define XX_CHAR_LITERAL 411
#define XX_TEXT_LITERAL 412
#define XX_URI_LITERAL 413
#define XX_TEMPLATE_LITERAL 414
#define XX_ELEMENT_LITERAL 415
#define XX_IDENTIFIER 416
#define YYERRCODE 256
short yyIsParser::yylhs[] = {                                        -1,
    0,    1,    1,    2,    2,    2,    2,    2,    2,    2,
    2,    3,   11,   11,    4,   14,   14,   15,   15,    5,
   16,   19,   20,   17,   17,   22,   22,   23,   23,   23,
   25,    6,   27,   29,   30,   28,   28,   31,   31,   32,
   32,   32,    7,    7,   33,   24,   24,   36,   34,   34,
   37,   35,   35,   38,   38,   39,   39,   39,   40,   40,
    8,   26,   42,   42,   44,   45,   45,   48,   49,   49,
   43,   43,   51,   50,   50,   52,   52,   52,   52,   53,
   10,   10,   55,   55,   55,   55,   55,   55,   55,   55,
   55,   41,   41,   65,   66,   66,   67,   57,   57,   68,
   69,   69,   58,   71,   71,   59,   72,   72,   70,   74,
   62,   61,   61,   61,   61,   60,   63,   76,   77,   77,
   77,   78,   79,   80,   80,   82,   83,   83,   84,   81,
   64,   85,   86,   86,   86,   87,   88,   89,   89,   90,
   91,   91,   92,    9,   93,   93,   95,   94,   94,   96,
   96,   97,   98,   98,   46,   46,   99,   99,   99,   99,
  103,  104,  105,  105,  106,  106,  107,  102,  102,  108,
  108,  109,  109,  109,  110,  100,  100,  101,  111,  111,
  111,  111,  111,  111,  111,  111,  111,  111,   18,   18,
   13,   13,   13,   12,   21,   21,   47,  112,  112,   73,
  113,  113,  116,  116,   54,   54,   54,  117,  117,  119,
  119,  121,  121,  123,  123,  125,  125,  127,  127,  129,
  129,  131,  131,  133,  133,  135,  135,  137,  137,  139,
  139,  141,  141,  142,  142,  144,  144,  144,  144,  144,
  144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
  144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
  144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
  144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
  144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
  144,  144,  144,  146,  146,  146,  146,  146,  146,  146,
  146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
  146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
  151,  151,  157,  157,  157,  157,  157,  157,  157,  157,
  157,  157,  157,  157,  157,  161,  161,  161,  161,  166,
  166,  166,  163,  163,  171,  171,  173,  174,  174,  174,
  170,  172,  164,  165,  167,  168,  169,  177,  179,  178,
  178,  175,  175,  181,  176,  183,  183,  184,  184,  182,
  182,  186,  186,  187,  187,  149,  149,  147,  147,  188,
  153,  153,  189,  150,  150,  148,  148,  190,  155,  155,
  191,  156,  156,  145,  145,  145,  154,   56,   56,  114,
  114,  193,  193,  193,  195,  195,  196,  196,  197,  192,
  194,  194,  198,  160,   75,   75,  199,  199,  200,  200,
  200,  185,  118,  120,  128,  130,  132,  143,  143,  143,
  143,  115,  115,  115,  115,  115,  115,  115,  115,  115,
  115,  115,  115,  115,  115,  115,  115,  115,  122,  122,
  124,  124,  126,  126,  126,  126,  134,  134,  136,  136,
  138,  138,  138,  138,  140,  140,  140,  158,  159,  201,
  201,  201,  201,  201,  201,  162,  162,  162,  162,  162,
  162,  162,  162,  162,  162,  202,  202,  202,  152,  152,
  152,  203,  203,  203,  204,  204,  204,  210,  210,  211,
  180,  212,  212,  213,  205,  206,  207,  208,  209,
};
short yyIsParser::yylen[] = {                                         2,
    1,    2,    1,    1,    1,    1,    1,    1,    1,    1,
    1,    3,    2,    1,    2,    2,    2,    2,    1,    2,
    3,    2,    3,    3,    2,    2,    1,    1,    1,    1,
    3,    2,    2,    2,    2,    3,    2,    2,    1,    1,
    1,    1,    4,    2,    2,    4,    2,    2,    3,    1,
    1,    3,    2,    2,    1,    1,    1,    1,    2,    1,
    2,    2,    1,    1,    2,    2,    2,    1,    1,    1,
    3,    1,    2,    3,    1,    2,    1,    2,    1,    3,
    1,    2,    1,    1,    1,    1,    1,    1,    1,    1,
    1,    3,    2,    1,    2,    1,    1,    4,    2,    2,
    1,    2,    4,    2,    2,    3,    1,    1,    3,    2,
    3,    4,    4,    5,    5,    9,    4,    2,    2,    1,
    1,    1,    1,    2,    1,    2,    2,    1,    3,    3,
    4,    1,    2,    1,    1,    1,    1,    2,    1,    2,
    2,    1,    3,    2,    3,    1,    1,    1,    1,    2,
    2,    1,    1,    1,    1,    1,    2,    2,    2,    1,
    1,    4,    1,    1,    2,    1,    1,    2,    1,    3,
    2,    3,    2,    1,    1,    2,    1,    1,    1,    1,
    1,    1,    1,    1,    1,    1,    1,    1,    2,    1,
    4,    2,    1,    1,    3,    1,    1,    1,    1,    1,
    4,    1,    3,    1,    5,    3,    1,    3,    1,    3,
    1,    2,    1,    3,    1,    3,    1,    3,    1,    3,
    1,    3,    1,    3,    1,    3,    1,    3,    1,    3,
    1,    4,    1,    2,    1,    4,    3,    5,    3,    2,
    4,    5,    7,    6,    6,    6,    5,    3,    6,    8,
    7,    7,    7,    6,    4,    5,    7,    6,    6,    6,
    5,    3,    3,    4,    6,    5,    5,    5,    4,    4,
    6,    5,    5,    5,    4,    2,    4,    6,    5,    5,
    5,    4,    2,    3,    5,    4,    4,    4,    3,    1,
    1,    2,    1,    2,    2,    2,    3,    3,    2,    4,
    4,    5,    4,    2,    1,    2,    4,    4,    5,    4,
    2,    3,    3,    3,    3,    3,    2,    3,    2,    1,
    1,    1,    2,    2,    1,    1,    1,    1,    1,    1,
    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
    1,    1,    3,    2,    2,    1,    1,    1,    1,    3,
    1,    3,    3,    4,    4,    3,    2,    3,    2,    1,
    1,    2,    1,    1,    1,    3,    1,    1,    1,    2,
    1,    3,    1,    1,    1,    3,    3,    3,    3,    1,
    3,    1,    3,    3,    2,    3,    3,    1,    3,    1,
    3,    3,    3,    1,    1,    1,    3,    3,    1,    1,
    1,    1,    1,    1,    2,    2,    2,    1,    2,    1,
    1,    2,    2,    2,    3,    2,    3,    1,    4,    3,
    3,    1,    1,    1,    1,    1,    1,    1,    1,    1,
    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
    1,    1,    1,    1,    1,    3,    3,    2,    2,    2,
    1,    2,    2,    1,    2,    2,    1,    2,    1,    1,
    1,    2,    1,    1,    1,    1,    1,    1,    1,
};
short yyIsParser::yydefred[] = {                                      0,
    0,    0,    0,    0,    0,    0,    0,    0,  163,  164,
  186,  180,  179,  184,    0,  185,  181,  182,  183,  187,
  188,  428,  429,  430,  326,  327,  328,  330,  329,  331,
    0,    0,    0,  107,  108,    0,    0,  132,    0,    0,
    0,  290,    0,    0,    0,  474,  475,  470,  471,  472,
  473,    0,  449,  505,  506,  508,  507,  509,    0,  491,
  494,  500,    0,   94,    0,    0,    0,  450,    0,    0,
    0,    0,  431,    0,    1,    0,    4,    5,    6,    7,
    8,    9,   10,   11,    0,    0,    0,    0,    0,   91,
    0,    0,   64,    0,  204,   81,    0,   83,   84,   85,
   86,   87,   88,   89,   90,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  149,  155,    0,    0,    0,  161,
    0,  177,  200,    0,  202,    0,    0,  211,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  231,  233,
    0,    0,    0,  293,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  320,    0,  332,  334,  335,  336,    0,
  338,  339,  340,  341,  342,    0,    0,  480,    0,    0,
  382,    0,  390,  395,  400,  402,  403,  404,  408,  411,
  468,  476,  478,  479,  481,  482,  483,  484,  485,  497,
    0,  501,    0,   16,   17,  194,    0,    0,    0,  488,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  394,
    0,  396,    0,    0,    0,    0,    0,  199,    0,    0,
  190,    0,    0,  196,  197,    0,  401,  198,   33,    0,
    0,   66,   68,  151,  152,   70,   69,   67,  154,  153,
  150,    0,    0,    0,    0,    0,  118,  102,    0,    0,
  410,  422,    0,    0,    0,    0,    0,  477,  333,  385,
    0,    0,    0,  368,    0,    0,  364,    0,  369,  413,
  405,  407,  489,  492,  495,  490,  493,  496,    0,  178,
    0,    0,    0,  292,  283,    0,    0,    0,    0,    0,
    0,  276,  412,  406,  409,  414,    2,   19,    0,   15,
    0,   20,   61,    0,   32,    0,    0,   44,    0,   62,
   72,   65,   82,   93,   97,    0,   96,    0,  100,    0,
    0,    0,    0,  144,    0,    0,    0,  169,    0,    0,
    0,  433,  434,  435,  446,  447,  448,  440,  441,  439,
  442,  443,  444,  445,  436,  437,  438,  432,    0,  324,
  469,  423,    0,    0,    0,  424,    0,    0,  451,  452,
    0,  453,  454,  455,  456,    0,  425,    0,  426,    0,
  427,    0,  457,  458,    0,  459,  460,    0,  462,  461,
  463,  464,    0,  465,  466,  467,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  317,  294,  295,  296,    0,
    0,    0,    0,    0,    0,    0,    0,  299,  306,    0,
  319,  323,    0,    0,  348,  351,  349,    0,  344,  346,
  347,    0,  504,  360,    0,  357,  361,    0,    0,  498,
  502,   12,   13,  486,  487,  312,  313,  316,  314,  315,
   21,    0,  189,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  416,    0,    0,    0,  418,
  111,  318,    0,    0,    0,  358,    0,  365,  353,    0,
    0,    0,  371,    0,  176,    0,  397,    0,    0,    0,
    0,  289,    0,    0,    0,    0,  284,  239,    0,    0,
    0,    0,   18,    0,    0,   25,   28,    0,    0,   27,
   29,   30,    0,    0,    0,    0,   37,   42,   41,   40,
    0,    0,   39,   63,    0,   53,   60,   58,   56,    0,
   55,   57,   51,    0,   50,   73,    0,    0,    0,   75,
   77,   92,   95,    0,  106,  398,    0,    0,    0,    0,
  121,    0,  123,  125,    0,  128,    0,  137,    0,    0,
  135,    0,  139,    0,  142,  147,  145,    0,  171,  175,
    0,  174,  168,    0,  167,  148,    0,  166,  203,    0,
  206,    0,  210,    0,    0,    0,    0,    0,    0,    0,
    0,  230,    0,    0,  248,    0,    0,    0,    0,    0,
  263,    0,    0,  262,  393,  384,  321,  297,  322,    0,
    0,    0,    0,    0,    0,  298,    0,    0,    0,    0,
    0,    0,  392,    0,    0,  343,  345,  359,  356,    0,
    0,    0,    0,    0,  195,  201,  104,  105,  103,  110,
    0,    0,  112,  113,    0,  109,    0,    0,    0,    0,
  415,  241,  354,  355,  370,    0,  366,  232,  282,    0,
    0,    0,    0,  277,  288,  286,  287,    0,  275,    0,
    0,    0,    0,  270,    0,    0,    0,   22,   24,   26,
    0,   47,    0,    0,   34,   36,   38,   59,   52,   54,
    0,   43,    0,   76,    0,    0,   71,   98,    0,    0,
  117,  119,  124,    0,  126,  127,    0,  131,  133,  138,
  140,  141,  173,    0,  170,  162,  165,    0,    0,    0,
    0,    0,    0,  269,    0,    0,    0,    0,  264,  236,
    0,  255,    0,    0,    0,    0,  301,  300,  303,    0,
  308,  307,  310,    0,  352,  350,    0,  114,  115,    0,
  420,    0,  421,  417,  374,  375,  372,  281,  279,  280,
    0,  285,  274,  272,  273,    0,    0,   31,    0,   49,
   80,   74,  129,  130,  143,  172,  205,  238,  247,    0,
    0,    0,    0,  242,  268,  266,  267,    0,    0,    0,
    0,    0,  261,    0,    0,    0,    0,  256,  302,  309,
    0,  419,  278,  271,   46,  246,  244,  245,    0,  265,
  254,    0,    0,    0,    0,  249,  260,  258,  259,    0,
    0,  243,  253,  251,  252,    0,  257,    0,  250,  116,
};
short yyIsParser::yydgoto[] = {                                      74,
   75,   76,   77,   78,   79,   80,   81,   82,   83,   84,
  197,  220,  221,   85,  300,   86,  302,  475,  497,  498,
  223,  499,  500,  501,  502,   87,   88,  305,  510,  511,
  512,  513,   89,  524,  308,  503,  525,  520,  521,  522,
   90,   91,  310,   92,   93,   94,  224,  232,  233,  529,
  311,  530,  531,   95,   96,   97,   98,   99,  100,  101,
  102,  103,  104,  105,  106,  316,  317,  107,  108,  247,
  448,  109,  110,  452,  250,  111,  539,  540,  541,  542,
  543,  544,  545,  546,  112,  549,  550,  551,  552,  553,
  554,  555,  113,  114,  557,  115,  234,  235,  116,  117,
  118,  327,  119,  120,  121,  567,  568,  328,  561,  562,
  122,  225,  123,  124,  349,  125,  126,  355,  127,  357,
  128,  129,  130,  361,  131,  366,  132,  368,  133,  370,
  134,  372,  135,  375,  136,  378,  137,  383,  138,  387,
  139,  140,  141,  142,  143,  144,  145,  146,  147,  148,
  598,  149,  150,  151,  152,  153,  154,  155,  350,  156,
  157,  158,  159,  160,  161,  162,  163,  164,  165,  166,
  418,  419,  420,  421,  265,  467,  167,  425,  426,  168,
  266,  471,  267,  268,  169,  473,  747,  170,  171,  172,
  173,  174,  175,  176,  177,  178,  179,  180,  459,  460,
  181,  182,  183,  184,  185,  186,  187,  188,  189,  190,
  191,  192,  193,
};
short yyIsParser::yysindex[] = {                                    934,
 -183, -309,  -49,    1,    1, -164,  184, -264,    0,    0,
    0,    0,    0,    0, -147,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
 -138,  -82, 1702,    0,    0,  -12,   90,    0, -232,  180,
  101,    0, 4762,  131,  -28,    0,    0,    0,    0,    0,
    0,  120,    0,    0,    0,    0,    0,    0, -318,    0,
    0,    0, -236,    0, 1092, 4426, 2043,    0,  101, 4524,
  120, -179,    0,    0,    0,  934,    0,    0,    0,    0,
    0,    0,    0,    0,  705,  141,  161,  167,   19,    0,
  265,    0,    0,   60,    0,    0,  299,    0,    0,    0,
    0,    0,    0,    0,    0, 1275, 1702,   90,   90,  279,
  216,  221,  311,  363,    0,    0,  339,  339,  339,    0,
  319,    0,    0, 1194,    0,   42,   45,    0, 3917, -154,
  -44,  320,  373,  468,   92,   93,  202,  231,    0,    0,
 4184,   48,  -19,    0,  180,  180,  180,  215,  264,  180,
    0,  180,  -23,    0,  103,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0, -112,  -17,    0,    0,  156,
    0,  164,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  108,    0,  132,    0,    0,    0,  489, -246,  144,    0,
  146,  760,  153,  182, 3485,  227,  250,  256,  180,    0,
  180,    0,  -18,  180,  180, -264,   60,    0,    0, -246,
    0,    0,  262,    0,    0, 1172,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  103,  197,   51, 3485, 3485,    0,    0,   81, 1702,
    0,    0,  266,  -23,  101, -318,  314,    0,    0,    0,
 3485,  212,   -7,    0,  -13,   -7,    0,  558,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  184,    0,
  588,  601, 2217,    0,    0,   95, 3485,  286,  -73,  180,
 2377,    0,    0,    0,    0,    0,    0,    0,  587,    0,
  -32,    0,    0, 2092,    0, 2191, -264,    0,  651,    0,
    0,    0,    0,    0,    0, 1398,    0,  309,    0, 1702,
 3485,  285, -109,    0, 3604, 3217,  339,    0,  339,  339,
 1857,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0, 3604,    0,
    0,    0, 3604, 3604, 3604,    0, 3604, -154,    0,    0,
 3917,    0,    0,    0,    0, 3917,    0, 3917,    0, 3917,
    0, 3917,    0,    0, 3917,    0,    0, 3917,    0,    0,
    0,    0, 3917,    0,    0,    0, 3917,   48,  562, 4601,
 2551,  101, 4327,  101,  760,    0,    0,    0,    0,   40,
  101,    1,   62,   40,  101,    1,   67,    0,    0,  101,
    0,    0,   -8, 3604,    0,    0,    0, -112,    0,    0,
    0,  287,    0,    0,  270,    0,    0,  101,  101,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  300,    0,   60, 3604,   90,   90,  596, 3375,  620,
 1702, 1702,  604,  623, -264,    0,  173,  605,  269,    0,
    0,    0,  266,  312,  577,    0,  307,    0,    0,  308,
   -7,  610,    0,   -7,    0, 3917,    0,  107, 3485,  322,
  -66,    0,  589,  600,  602, 3485,    0,    0,  113, 3485,
  323,  -63,    0, 2597,   60,    0,    0,  141,  304,    0,
    0,    0,   30, -264,   60, -138,    0,    0,    0,    0,
  167, 2259,    0,    0, 2760,    0,    0,    0,    0, 3089,
    0,    0,    0,   35,    0,    0,   60,  635,  494,    0,
    0,    0,    0, 1702,    0,    0, 3604,  640,  575,  368,
    0,  370,    0,    0, 1883,    0, 3604,    0,  590,  368,
    0,  371,    0, 1579,    0,    0,    0, 3604,    0,    0,
   91,    0,    0,  -82,    0,    0, 1074,    0,    0,  660,
    0,   45,    0,  -44,  320,  373,  468,   92,   93,  202,
  231,    0, 3485, 2711,    0,  118, 3485,  361,  -57,  180,
    0, 4717, 2885,    0,    0,    0,    0,    0,    0,  266,
  312,  180,  180,  682,  362,    0,  266,  312,  180,  180,
  682,  365,    0,  357,  366,    0,    0,    0,    0,  266,
  312,  266,  312,   60,    0,    0,    0,    0,    0,    0,
 1702, 1702,    0,    0, 3485,    0, 3485,  668, 3485,  599,
    0,    0,    0,    0,    0,    4,    0,    0,    0,  637,
  642,  643, 3485,    0,    0,    0,    0,  644,    0,  646,
  647,  655, 3485,    0, -264,  674,  262,    0,    0,    0,
 -264,    0,  262,  262,    0,    0,    0,    0,    0,    0,
 -264,    0,  635,    0, 3604, 2420,    0,    0,  686, 1702,
    0,    0,    0, 3604,    0,    0,  691,    0,    0,    0,
    0,    0,    0, 3604,    0,    0,    0, 3604,  657,  130,
 3485,  394,    8,    0,  661,  663,  664, 3485,    0,    0,
 3045,    0,  134, 3485,  403,   10,    0,    0,    0,  682,
    0,    0,    0,  682,    0,    0,  262,    0,    0,  707,
    0, 3485,    0,    0,    0,    0,    0,    0,    0,    0,
  675,    0,    0,    0,    0,  677,  262,    0,   35,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  678,
  680,  684, 3485,    0,    0,    0,    0,  685,  152, 3485,
  417,   15,    0,  693,  694,  696, 3485,    0,    0,    0,
 3485,    0,    0,    0,    0,    0,    0,    0,  697,    0,
    0,  698,  699,  700, 3485,    0,    0,    0,    0,  701,
  754,    0,    0,    0,    0,  706,    0, 1702,    0,    0,
};
short yyIsParser::yyrindex[] = {                                      0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  712,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  764,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0, 4126,    0,
    0,    0, 4989,    0,    0,    0,    0,    0, 5970,    0,
    0,    0,    0,    0,    0,   85,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  260,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   70,
    0,    0,    0,  746,    0,    0,   20,    0,   86,    0,
    0,    0,    0, 6368,    0,  209,  253,    0,    0, 1716,
 2105, 2620, 6618, 6687, 6612, 4227, 2132, 2292,    0,    0,
    0, 6473,    0,    0,    0,    0,    0, 5757, 5826,    0,
 5688,    0,    0,    0,    0,    0,    0,    0,    0, 5215,
    0,    0,    0,    0,    0,    0,    0,    0, 5146,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
 5359,    0, 3988,    0,    0,    0,    0,  747,    0,    0,
    0,    0,  -14,   -9,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0, 1471,    0,
    0,  175,  149,    0,    0,    0,    0,    0,    0,  267,
  398,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0, 4057, 5585,    0,    0,    0,
    0,    0,    0,    0,    0,  -10,    0,   29,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0, 6086,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  522,    0,    0,
    0,    0,    0,    0,    0,    0,  115,    0,  133,  142,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0, 3189,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0, 6542,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0, 6155,    0,    0,    0, 6224,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  157,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  767,  768,    0,    0,    0,    0,    0,    0,
   -2,  125,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  712,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  531,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  689,
    0,  -79,    0,    0,    0,    0,    0,    0,    0,  704,
    0,  -47,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  712,    0,    0,    0,    0,    0,    0,
    0, 1410,    0, 3106, 4925, 6762, 6756, 6681, 5101, 2790,
 2960,    0,    0,    0,    0,    0,    0,    0,    0, 6299,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  769,
  781,    0,    0,    0,    0,    0,  792,  793,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  794,
  795,  796,  797,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   31,    0,    0,    0,
    0,    0,  257,  718,    0,    0,    0,    0,    0,    0,
    0,    0,  549,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  719,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  218,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  -67,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
};
short yyIsParser::yygindex[] = {                                      0,
   58,    0,    0,    0,    0,    0,    0,  205, -247,  -33,
    0,  841,  -35,    0,    0,    0,  347,   -4,    0,    0,
  206,    0,  359,  247,    0,  372,    0,  345,    0,    0,
    0,  352,    0,  188, -441,    0,  187,    0,  349,    0,
  778,    0,    0,  248,    0,  -58,  -84,  839,    0,    0,
    0,  186,  346,   68,    0,   66,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  560,    0,    0,   96,
    0,    0,  -59,  424,  -95,    0,    0,    0,  337,    0,
 -280,  338,    0,  336,    0,    0,    0,  332,    0,  333,
    0,  330,    0,    0,    0,    0,  859,    0,    0,    0,
    0,  517,    0,    0,    0,    0,  325,  280,    0, -523,
    0,    0,    0,   80,  672, -278,    0,    0,  550,    0,
  551,    0,  777,    0,  546,    0,  543,    0,  548,    0,
  547,    0,  554,    0,  544,    0,  540,    0,  537,    0,
 -315,    0,    0,  780,   59,  -55,    0,    0,    0,    9,
  519,   94,  636,   -3,  645,   76,  -34,    0,    0,    0,
    0,    0, -137, -119,    0, -101,    0,    0,    0,    0,
    0,  509,  515,    0,    0,    0,    0,    0,  518, -161,
    0,    0, -196,  466,  284,  473,    0,    0,    0,    0,
    0,   54,    0,    0,    0,    0,    0,    0,    0,  310,
  -38,    0,    0,    0,    0,    0,    0,    0,    0,   50,
    0,  765,    0,
};
#define YYTABLESIZE 7167
short yyIsParser::yytable[] = {                                     243,
  210,  210,  222,  229,  262,  427,  281,  289,  260,  312,
  285,  205,  207,  207,  292,  364,  249,  365,  263,  487,
  249,  249,  205,  193,  262,  410,  654,  245,  415,  664,
  422,  205,  205,  470,  703,  719,  363,  210,  614,  259,
  205,  264,  548,  205,  362,  122,  416,  396,  271,  397,
  398,  399,  403,  407,  408,   23,  409,  411,  518,  156,
  156,  672,  206,  213,  417,  210,  468,  294,  367,  472,
  569,  582,  315,  318,  354,  367,  307,  136,  681,  205,
  156,   71,  682,  565,    3,  351,  226,  671,   48,  367,
  449,  217,  496,  392,  273,  274,   62,  208,  208,  253,
  774,  205,  788,  196,  353,  272,  205,  806,  275,  217,
  399,  390,  278,  436,  450,  437,  254,  438,  439,  440,
  205,  456,  257,  216,  295,  160,  160,  290,  399,  246,
  282,  270,  442,  297,  704,  376,  258,  377,  391,  393,
  205,  306,  299,    3,   71,  257,  160,  218,  196,  257,
  293,  228,  306,   48,  158,  158,  483,  306,  462,  205,
  648,   71,  433,  424,  373,  218,  626,  260,  650,  228,
  248,  373,  157,  157,  660,  158,  276,  277,   62,  715,
  766,  159,  159,  705,  443,  453,  454,  482,  193,  193,
  457,  770,  193,  157,  488,  784,  192,  192,  259,  649,
  192,  465,  159,  319,  320,  659,  193,  193,  257,  193,
  714,  441,  205,  802,  192,  192,  461,  192,  351,  249,
  257,  261,  769,  481,  528,   71,  783,  484,  194,  195,
  538,  492,   45,  637,  412,  547,  252,  381,  382,  193,
  430,  359,  360,  380,  801,  210,  494,  192,  379,  207,
  527,  210,  207,  413,  249,  495,  414,  191,  191,  264,
  122,  191,  264,  301,  230,  176,  207,  207,  231,  548,
  282,  193,  518,  236,  472,  191,  191,  237,  191,  192,
  415,  257,  315,   64,  486,  209,  535,  212,  212,  304,
  227,  653,  136,  209,  663,  258,  209,   45,  416,   63,
  718,  207,  523,  249,  309,  275,   70,  458,  191,  641,
  209,  209,  640,  463,   48,  209,  417,  795,  148,  565,
  148,  226,  321,  244,  212,  154,  227,  154,  269,  239,
  464,  589,  410,  240,  585,  227,  394,  594,  322,  451,
  191,  395,  395,  323,  193,  209,  410,  193,  193,  362,
  363,  422,  212,  469,  227,  296,  363,  313,  226,  625,
  596,  202,  199,  200,  362,  773,  201,  787,  455,  324,
    9,   10,  805,  422,   11,   12,   13,   14,  280,   48,
   16,   17,   18,   19,   20,   21,  536,  252,  210,  454,
  210,  259,  556,  560,  423,  367,  599,  210,  210,  210,
  599,  210,  210,  210,  257,  257,  210,  252,  252,  264,
  602,  389,  203,   60,  609,  423,  204,  633,  634,  651,
  570,  571,  604,  325,  210,  210,  658,  611,  669,  326,
  661,  156,  257,  257,  257,  156,  257,   69,  227,   52,
  257,  331,  683,  367,  367,  257,  352,  257,  356,  257,
  590,  257,  595,  210,  257,  252,  153,  257,  153,  600,
  206,  605,  257,  607,  206,  612,  257,  264,  613,  257,
  264,  218,  257,  251,  257,  228,  601,  252,  251,  597,
  608,  615,  252,  597,  746,  227,  620,  622,  258,  373,
  374,  373,  251,  257,  720,  603,  252,  160,  369,  610,
  688,  160,   52,  621,  623,  371,  727,  728,  508,  428,
  517,  695,  251,  731,  732,  638,  252,  429,  252,   52,
  701,   99,   62,  709,  713,  227,  158,  716,  446,  447,
  158,  251,  212,  726,  687,  252,  722,  686,  212,  217,
  373,  627,  628,  423,  157,  631,  269,  432,  157,  269,
  509,  514,  519,  159,   99,  257,  434,  159,  435,   99,
  193,   99,  227,   99,  193,  273,  207,   99,  192,  400,
  401,   79,  192,  402,   79,  740,  207,  741,  566,  743,
   99,  457,  494,   52,  251,   99,  176,  395,  252,   78,
  176,  495,   78,  751,  276,  218,  196,  738,  739,  219,
  729,  528,  466,  756,  689,  401,  563,  733,  563,  563,
  209,  405,   99,   99,  697,  474,  257,  444,  404,  405,
  209,  394,  406,  537,  538,  560,  257,  527,  476,  191,
  384,  385,  386,  191,  329,  330,  210,  257,  205,  209,
  214,  477,  745,  485,   99,  493,   99,   99,  211,  215,
  534,  771,  583,  618,  629,  624,  764,  209,  778,  449,
  422,  782,  635,  636,  785,  639,  523,  410,  193,  642,
  646,  257,  193,  643,  644,  212,  523,  212,  227,  652,
  662,  655,  792,  227,  212,  212,  212,  227,  212,  212,
  212,  526,  656,  212,  657,  685,  269,  690,  458,  691,
  667,   46,   47,   48,   49,   50,   51,  538,  537,  673,
  674,  212,  212,  799,  698,  547,  508,  708,  717,  678,
  803,  205,  730,  735,  517,  734,  789,  810,  742,  748,
  790,  811,  758,  736,  749,  750,  752,   68,  753,  754,
  212,  514,   72,  763,   65,  816,   71,  755,  765,  768,
   69,  772,  761,  775,  269,  776,  777,  269,  509,  514,
  786,  689,  514,  298,  257,  791,  519,  793,   66,  794,
  796,  560,  797,  257,  804,  767,  798,  800,   99,   99,
   99,   99,   99,  257,  820,  807,  808,  257,  809,  812,
  813,  814,  815,  817,  818,   67,   70,   72,  819,  205,
   99,   71,  178,  101,  146,   14,  377,  376,  383,   99,
   99,   99,   99,  120,  566,   99,   99,   99,   99,   99,
  381,   99,   99,   99,   99,   99,   99,   64,  134,  737,
   73,  391,  389,  379,  378,  387,  386,   99,   99,   99,
   35,  132,  198,   99,  668,   99,   99,   99,   99,   99,
   99,   99,   99,   99,   99,  675,   99,  670,  759,   99,
   99,   99,   99,  677,  303,  666,   99,  760,  680,  238,
  757,  762,  684,  632,   99,  533,  692,   99,   99,  693,
  696,  699,   99,  702,  700,   99,  455,   99,    9,   10,
  241,  707,   11,   12,   13,   14,  280,  445,   16,   17,
   18,   19,   20,   21,  572,  358,  574,  573,  575,   99,
   99,   99,   99,   99,   99,  576,  577,  580,  579,  581,
  388,   99,  606,  212,   99,  578,  616,   99,   99,   99,
   99,   99,  617,   99,   99,   99,   99,   99,  455,  647,
    9,   10,  619,  645,   11,   12,   13,   14,  280,  744,
   16,   17,   18,   19,   20,   21,    0,  431,    0,    0,
    0,    1,    2,    3,    4,    5,   68,    0,    0,    0,
    0,   72,    0,   65,    0,   71,    0,    0,    0,   69,
    0,    0,    0,    6,    0,    0,    0,    0,    0,    0,
    0,    0,    7,    8,    9,   10,    0,   66,   11,   12,
   13,   14,   15,    0,   16,   17,   18,   19,   20,   21,
  251,    0,    0,    0,  252,    0,    0,    0,    3,    0,
   22,   23,   24,    0,   67,   70,   25,    0,   26,   27,
   28,   29,   30,   31,   32,   33,   34,   35,    0,   36,
    0,    0,   37,   38,    0,   39,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   64,   40,    0,   73,
   41,   42,  218,    0,    0,   43,  228,    0,   44,    0,
   45,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   25,    0,   26,   27,   28,   29,   30,    0,    0,
    0,    0,   46,   47,   48,   49,   50,   51,    0,    0,
    0,    0,    0,    0,   52,    0,    0,   53,    0,    0,
   54,   55,   56,   57,   58,    0,   59,   60,   61,   62,
   63,    0,    0,    0,   68,   45,    0,    0,    0,   72,
    0,   65,    0,   71,    0,    0,    0,   69,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   46,   47,   48,
   49,   50,   51,    0,    0,   66,    0,    0,    0,   52,
    0,    0,    0,    0,    0,   54,   55,   56,   57,   58,
    0,  256,   60,   61,   62,   63,    0,    0,    0,    0,
    0,    0,   67,   70,    0,    0,    0,    0,    0,    0,
    1,    2,    3,    4,    5,    0,    0,    0,  706,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    6,    0,    0,    0,    0,   73,    0,    0,
    0,    7,    8,    9,   10,    0,    0,   11,   12,   13,
   14,   15,  348,   16,   17,   18,   19,   20,   21,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   22,
   23,   24,    0,    0,  348,   25,    0,   26,   27,   28,
   29,   30,   31,   32,   33,   34,   35,    0,   36,    0,
    0,   37,   38,    0,   39,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   40,    0,    0,   41,
   42,    0,    0,    0,   43,    0,    0,   44,    0,   45,
    0,    0,    0,    0,    0,    0,    0,   68,    0,    0,
    0,    0,   72,    0,   65,    0,   71,    0,    0,    0,
   69,   46,   47,   48,   49,   50,   51,    0,    0,    0,
    0,    0,    0,   52,    0,    0,   53,    0,   66,   54,
   55,   56,   57,   58,    0,   59,   60,   61,   62,   63,
    3,    4,    5,    0,    0,    0,    0,    0,    0,    0,
    0,  455,    0,    9,   10,   67,   70,   11,   12,   13,
   14,  564,    0,   16,   17,   18,   19,   20,   21,  279,
    0,    9,   10,    0,    0,   11,   12,   13,   14,  280,
    0,   16,   17,   18,   19,   20,   21,   64,    0,  314,
   73,    0,    0,   32,    0,    0,    0,   22,   23,   24,
    0,    0,    0,   25,    0,   26,   27,   28,   29,   30,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   68,    0,    0,    0,    0,   72,    0,   65,    0,   71,
    0,    0,  208,   69,    0,    0,    0,   41,   42,    0,
  208,    0,   43,  208,    0,   44,    0,   45,    0,    0,
    0,   66,    0,    0,    0,    0,    0,  208,  208,    0,
    0,    0,  208,    0,    0,    0,    0,    0,    0,   46,
   47,   48,   49,   50,   51,    0,    0,    0,   67,   70,
    0,   52,    0,    0,   53,    0,    0,   54,   55,   56,
   57,   58,  208,   59,   60,   61,   62,   63,    0,    0,
    0,  198,    0,    0,    0,    0,    0,    0,    0,    0,
   64,    0,  532,   73,    0,    0,    0,    0,  198,    0,
    0,  422,    0,    3,    4,    5,    0,    0,    0,    0,
    0,  332,  333,  334,    0,  335,  336,  337,  338,  339,
  340,  341,  342,  343,  344,    0,  345,  346,  347,    0,
    0,  198,  242,  332,  333,  334,    0,  335,  336,  337,
  338,  339,  340,  341,  342,  343,  344,    0,  345,  346,
  347,   46,   47,   48,   49,   50,   51,    0,    0,    0,
   22,   23,   24,  198,    0,    0,   25,    0,   26,   27,
   28,   29,   30,    0,    0,   33,   34,   35,    0,   36,
    0,   68,   37,   38,    0,   39,   72,    0,   65,    0,
   71,    0,    0,    0,   69,    0,    0,   40,    0,    0,
   41,   42,    0,    0,    0,   43,    0,    0,   44,    0,
   45,    0,   66,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    3,    4,    5,    0,
    0,    0,   46,   47,   48,   49,   50,   51,    0,   67,
   70,    0,    0,    0,   52,    0,    0,   53,    0,    0,
   54,   55,   56,   57,   58,  242,   59,   60,   61,   62,
   63,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   64,    0,    0,   73,    0,    0,    0,    0,    0,
    0,    0,    0,   22,   23,   24,    0,    0,    0,   25,
    0,   26,   27,   28,   29,   30,    0,    0,   33,   34,
   35,    0,   36,    0,   68,   37,   38,    0,   39,   72,
    0,   65,    0,   71,    0,    0,    0,   69,  213,    0,
   40,    0,    0,   41,   42,    0,  213,    0,   43,  213,
    0,   44,    0,   45,    0,   66,    0,  208,    0,    0,
    0,    0,    0,  213,  213,    0,    0,  208,  213,    0,
    0,    0,    0,    0,    0,   46,   47,   48,   49,   50,
   51,    0,   67,   70,    0,    0,    0,   52,    0,    0,
   53,    0,    0,   54,   55,   56,   57,   58,  213,   59,
   60,   61,   62,   63,  208,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   64,    0,  198,   73,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    3,    4,    5,
  422,  422,  422,    0,  422,  422,  422,  422,  422,  422,
  422,  422,  422,  422,    0,  422,  422,  422,    0,    0,
    0,    0,    0,    0,    0,    0,  242,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  198,    0,    0,    0,  198,    0,    0,    0,
    0,    0,    0,    0,   22,   23,   24,    0,    0,    0,
   25,    0,   26,   27,   28,   29,   30,    0,    0,   33,
   34,   35,    0,   36,    0,   68,   37,   38,    0,   39,
   72,    0,   65,  547,   71,    0,    0,    0,   69,    0,
    0,   40,    0,    0,   41,   42,    0,    0,    0,   43,
    0,    0,   44,    0,   45,    0,   66,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    3,    4,    5,    0,    0,    0,   46,   47,   48,   49,
   50,   51,    0,   67,   70,    0,    0,    0,   52,    0,
    0,   53,    0,    0,   54,   55,   56,   57,   58,  242,
   59,   60,   61,   62,   63,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,   64,    0,    0,   73,    0,
    0,    0,    0,    0,    0,    0,    0,   22,   23,   24,
    0,    0,    0,   25,    0,   26,   27,   28,   29,   30,
    0,    0,   33,   34,   35,    0,   36,    0,    0,   37,
   38,    0,   39,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   40,    0,    0,   41,   42,    0,
    0,    0,   43,    0,    0,   44,    0,   45,    0,    0,
    0,    0,    0,  213,    0,   68,    0,    0,    0,    0,
   72,    0,   65,  213,   71,    0,    0,    0,   69,   46,
   47,   48,   49,   50,   51,    0,    0,    0,    0,    0,
    0,   52,  288,    0,   53,  287,   66,   54,   55,   56,
   57,   58,    0,   59,   60,   61,   62,   63,    0,  213,
  213,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,   67,   70,    0,    0,  215,    0,    0,
    0,    3,    4,    5,  455,  215,    9,   10,  215,    0,
   11,   12,   13,   14,  564,    0,   16,   17,   18,   19,
   20,   21,  215,  215,  227,    0,    0,  215,   73,  227,
  242,    0,  227,    0,  227,  227,  227,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   32,    0,    0,  227,
  227,  227,    0,  227,  227,    0,    0,  215,   22,   23,
   24,    0,    0,    0,   25,    0,   26,   27,   28,   29,
   30,    0,    0,   33,   34,   35,  507,   36,    0,    0,
   37,  694,    0,   39,  227,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,   40,    0,    0,   41,   42,
    0,    0,    0,   43,    0,    0,   44,    0,   45,   68,
    0,    0,    0,    0,   72,  227,   65,  227,   71,    0,
    0,    0,   69,    0,    0,    0,    0,    0,    0,    0,
   46,   47,   48,   49,   50,   51,  480,    0,    0,  479,
   66,    0,   52,    0,    0,   53,    0,    0,   54,   55,
   56,   57,   58,    0,   59,   60,   61,   62,   63,    0,
    0,    3,    4,    5,    0,    0,    0,   67,   70,    0,
    0,    0,    0,    0,    0,  516,    0,    0,    0,    0,
    0,    0,    0,    0,  229,    0,    0,  229,  229,  229,
  242,    0,  229,  229,  229,  229,  229,    0,  229,    0,
    0,    0,   73,    0,    0,    0,    0,    0,    0,  229,
  229,  229,    0,  229,  229,    0,    0,    0,   22,   23,
   24,    0,    0,    0,   25,    0,   26,   27,   28,   29,
   30,    0,    0,    0,    0,    0,    0,    0,    0,  504,
  505,    9,   10,  676,  229,   11,   12,   13,   14,  506,
    0,   16,   17,   18,   19,   20,   21,    0,   41,   42,
  286,    0,    0,   43,    0,    0,   44,    0,   45,   68,
    0,    0,    0,    0,   72,  229,   65,  229,   71,    0,
   31,    0,   69,    0,    0,    0,    0,    0,    0,    0,
   46,   47,   48,   49,   50,   51,  491,    0,    0,  490,
   66,    0,   52,    0,    0,   53,    0,    0,   54,   55,
   56,   57,   58,    0,   59,   60,   61,   62,   63,    0,
    0,    0,  215,    0,    0,    0,    0,   67,   70,  515,
    0,    0,  215,    0,    0,    3,    4,    5,  504,    0,
    9,   10,    0,    0,   11,   12,   13,   14,   15,  227,
   16,   17,   18,   19,   20,   21,    0,    0,    0,  227,
  215,  215,   73,    0,  242,    0,    0,    0,  215,  215,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   31,
   32,    0,    0,    0,    0,  227,  227,  227,  227,  227,
  227,    0,   22,   23,   24,  227,  227,    0,   25,    0,
   26,   27,   28,   29,   30,    0,  504,  505,    9,   10,
    0,    0,   11,   12,   13,   14,  506,    0,   16,   17,
   18,   19,   20,   21,    0,    0,    0,    0,    0,    0,
    0,    0,   41,   42,  478,    0,    0,   43,    0,    0,
   44,    0,   45,   68,    0,    0,    0,   31,   72,    0,
   65,    0,   71,    0,    0,    0,   69,    0,    0,    0,
    0,    0,    0,    0,   46,   47,   48,   49,   50,   51,
  588,    0,    0,  587,   66,    0,   52,    0,    0,   53,
    0,    0,   54,   55,   56,   57,   58,    0,   59,   60,
   61,   62,   63,    0,    0,    3,    4,    5,    0,    0,
    0,   67,   70,    0,    0,    0,    0,    0,    0,  229,
    0,    0,  217,    0,    0,    0,    0,    0,    0,  229,
  217,    0,    0,  217,  242,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   73,  217,  217,  217,
    0,  217,  217,    0,    0,  229,  229,  229,  229,  229,
  229,    0,   22,   23,   24,  229,  229,    0,   25,    0,
   26,   27,   28,   29,   30,    0,    0,  455,    0,    9,
   10,    0,  217,   11,   12,   13,   14,  280,    0,   16,
   17,   18,   19,   20,   21,    0,    0,    0,    0,    0,
    0,    0,   41,   42,  489,    0,    0,   43,    0,    0,
   44,    0,   45,   68,    0,    0,    0,    0,   72,    0,
   65,    0,   71,    0,    0,    0,   69,    0,    0,    0,
    0,    0,    0,    0,   46,   47,   48,   49,   50,   51,
  712,    0,    0,  711,   66,    0,   52,    0,    0,   53,
    0,    0,   54,   55,   56,   57,   58,    0,   59,   60,
   61,   62,   63,    0,    0,    0,    0,    0,    0,    0,
    0,   67,   70,    0,    0,    0,    0,    0,    0,    3,
    4,    5,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  226,    0,    0,    0,    0,  226,    0,    0,
  226,  218,  226,  226,  226,  228,   73,    0,  242,    0,
    0,    0,    0,    0,    0,    0,    0,  226,  226,  226,
    0,  226,  226,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   22,   23,   24,    0,
    0,    0,   25,    0,   26,   27,   28,   29,   30,    0,
    0,    0,  226,    0,  665,    0,    9,   10,    0,    0,
   11,   12,   13,   14,  506,    0,   16,   17,   18,   19,
   20,   21,    0,    0,    0,    0,   41,   42,  586,    0,
    0,   43,    0,  226,   44,  226,   45,   68,    0,    0,
    0,    0,   72,    0,   65,   31,   71,    0,    0,    0,
   69,    0,    0,    0,    0,    0,    0,    0,   46,   47,
   48,   49,   50,   51,  725,    0,    0,  724,   66,    0,
   52,    0,    0,   53,    0,    0,   54,   55,   56,   57,
   58,    0,   59,   60,   61,   62,   63,    0,    0,    3,
    4,    5,    0,    0,    0,   67,   70,  217,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  217,    0,    0,
    0,    0,  228,    0,    0,  228,  228,  228,  242,    0,
  228,  228,  228,  228,  228,    0,  228,    0,    0,    0,
   73,    0,    0,  217,  217,  217,  217,  228,  228,  228,
    0,  228,  228,  217,  217,    0,   22,   23,   24,    0,
    0,    0,   25,    0,   26,   27,   28,   29,   30,    0,
    0,    0,    0,    0,    0,    0,    0,  455,    0,    9,
   10,    0,  228,   11,   12,   13,   14,  506,    0,   16,
   17,   18,   19,   20,   21,    0,   41,   42,  710,    0,
    0,   43,    0,    0,   44,    0,   45,   68,    0,    0,
    0,    0,   72,  228,   65,  228,   71,    0,   31,    0,
   69,    0,    0,    0,    0,    0,    0,    0,   46,   47,
   48,   49,   50,   51,  781,    0,    0,  780,   66,    0,
   52,    0,    0,   53,    0,    0,   54,   55,   56,   57,
   58,    0,   59,   60,   61,   62,   63,    0,    0,    0,
    0,    0,    0,    0,    0,   67,   70,    0,  214,    0,
    0,    0,    0,    3,    4,    5,  214,  226,    0,  214,
    0,    0,    0,    0,    0,    0,    0,  226,    0,    0,
    0,    0,    0,  214,  214,    0,    0,    0,  214,    0,
   73,    0,  242,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  226,  226,  226,  226,  226,  226,    0,
    0,    0,    0,  226,  226,    0,    0,    0,  214,    0,
   22,   23,   24,    0,    0,    0,   25,    0,   26,   27,
   28,   29,   30,  679,    0,    0,    0,    0,    0,    0,
    0,  212,    0,    0,    0,    0,    0,    0,    0,  212,
    0,    0,  212,    0,    0,    0,    0,    0,    0,    0,
   41,   42,  723,    0,    0,   43,  212,  212,   44,   68,
   45,  212,    0,    0,   72,    0,   65,    0,   71,    0,
  558,    0,   69,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   46,   47,   48,   49,   50,   51,    0,    0,
   66,  212,    0,    0,   52,    0,    0,   53,    0,    0,
   54,   55,   56,   57,   58,    0,   59,   60,   61,   62,
   63,    0,    0,    3,    4,    5,    0,   67,   70,  559,
    0,    0,    0,    0,    0,    0,    0,  228,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  228,    0,    0,
    0,    0,  242,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   73,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  228,  228,  228,  228,  228,  228,    0,
   22,   23,   24,  228,  228,    0,   25,  515,   26,   27,
   28,   29,   30,    0,    0,    0,  504,    0,    9,   10,
    0,    0,   11,   12,   13,   14,   15,    0,   16,   17,
   18,   19,   20,   21,    0,    0,    0,    0,    0,    0,
   41,   42,  779,    0,    0,   43,    0,   68,   44,    0,
   45,    0,   72,    0,   65,  630,   71,   31,   32,    0,
   69,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   46,   47,   48,   49,   50,   51,   66,    0,
    0,    0,    0,    0,   52,    0,    0,   53,    0,    0,
   54,   55,   56,   57,   58,    0,   59,   60,   61,   62,
   63,    0,    0,  214,    0,   67,   70,    0,    0,    0,
    0,    0,    0,  214,    0,    3,    4,    5,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   73,  214,  214,    0,    0,    0,    0,    0,    0,  214,
  214,    0,    0,    0,    0,    0,    0,   68,    0,    0,
    0,    0,   72,    0,   65,    0,   71,    0,    0,    0,
   69,    0,   22,   23,   24,    0,    0,    0,   25,    0,
   26,   27,   28,   29,   30,    0,  212,    0,   66,    0,
    0,    0,    0,    0,    0,    0,  212,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   41,   42,    0,   67,   70,   43,    0,    0,
   44,    0,   45,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  212,  212,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   46,   47,   48,   49,   50,   51,
   73,    0,    0,    0,    0,    0,   52,    0,    0,   53,
    0,    0,   54,   55,   56,   57,   58,    0,   59,   60,
   61,   62,   63,    3,    4,    5,   68,    0,    0,    0,
    0,   72,    0,   65,    0,   71,    0,    0,    0,   69,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  242,    0,    0,    0,    0,   66,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   22,   23,   24,    0,   67,   70,   25,    0,   26,   27,
   28,   29,   30,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   73,
   41,   42,    0,    0,    0,   43,    0,    0,   44,    0,
   45,    0,    0,    3,    4,    5,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   46,   47,   48,   49,   50,   51,    0,    0,
    0,    0,  242,    0,   52,    0,    0,   53,    0,    0,
   54,   55,   56,   57,   58,    0,   59,   60,   61,   62,
   63,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   22,   23,   24,    0,    0,    0,   25,    0,   26,   27,
   28,   29,   30,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   41,   42,    0,    0,    0,   43,    0,    0,   44,    0,
   45,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    3,    4,    5,    0,    0,    0,    0,    0,
    0,    0,   46,   47,   48,   49,   50,   51,    0,    0,
    0,    0,    0,    0,   52,    0,    0,   53,    0,    0,
   54,   55,   56,   57,   58,    0,   59,   60,   61,   62,
   63,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   22,
   23,   24,    0,    0,    0,   25,    0,   26,   27,   28,
   29,   30,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   72,    0,   65,    0,   71,   41,
   42,    0,   69,    0,   43,    0,    0,   44,    0,   45,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   66,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   46,   47,   48,   49,   50,   51,    0,    0,    0,
    0,    0,    0,   52,    0,    0,   53,   67,   70,   54,
   55,   56,   57,   58,    0,   59,   60,   61,   62,   63,
  503,    0,    0,  503,  503,  503,    0,  503,  503,  503,
  503,  503,  503,  503,  503,    0,    0,    0,    0,    0,
    0,    0,   73,    0,    0,  503,  503,  503,    0,  503,
  503,  503,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  503,  503,
  503,    0,    0,    0,    0,    0,    0,    0,    0,  504,
    0,    0,  504,  504,  504,    0,  504,  504,  504,  504,
  504,  504,  504,  504,    0,    0,    0,    0,    0,    0,
    0,  503,    0,  503,  504,  504,  504,    0,  504,  504,
  504,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  504,  504,  504,
    0,    0,    0,    0,    0,    0,    0,    0,  504,    0,
    0,  504,  504,  504,    0,  410,  504,  504,  504,  504,
  504,  504,  504,    0,    0,    3,    4,    5,    0,    0,
  504,    0,  504,  504,  504,  504,    0,  504,  504,  504,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  504,  504,  504,    0,
    0,   72,    0,  205,    0,   71,    0,    0,    0,   69,
    0,    0,   22,   23,   24,    0,    0,    0,   25,    0,
   26,   27,   28,   29,   30,    0,    0,   66,    0,  504,
    0,  504,    0,    0,    0,    0,    0,    0,    0,  225,
    0,    0,    0,    0,  225,    0,    0,  225,    0,    0,
  225,    0,   41,   42,   67,   70,    0,   43,    0,    0,
   44,    0,   45,    0,  225,  225,  225,    0,  225,  225,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   46,   47,   48,   49,   50,   51,
    0,    0,    0,    0,    0,    0,   52,    0,    0,  225,
    0,    0,   54,   55,   56,   57,   58,    0,   59,   60,
   61,   62,   63,    0,    0,    0,    0,    0,    0,    0,
    0,  503,  503,  503,    0,  503,  503,    0,    0,    0,
  225,  503,  225,    0,  503,  503,    0,    0,    0,    0,
    0,    0,    0,    0,   72,    0,  205,    0,   71,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  503,    0,
    0,  503,  503,  503,  503,  503,  503,  503,  503,  503,
  592,  503,  503,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  503,    0,    0,    0,    0,    0,    0,
  504,  504,  504,    0,  504,  504,    0,  593,    0,    0,
  504,    0,    0,    0,  504,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    3,    4,    5,    0,    0,    0,    0,    0,
  504,  504,  504,  504,  504,  504,  504,  504,  504,    0,
  504,  504,    0,   72,    0,  205,    0,   71,  504,    0,
    0,  284,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  410,    0,  504,    0,    0,  410,    0,    0,  504,
    0,    0,    0,  504,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,   25,    0,   26,   27,   28,
   29,   30,    0,    0,    0,    0,  283,    0,    0,  504,
  504,  504,  504,  504,  504,  504,  504,  504,    0,  504,
  504,    0,    0,    0,    0,    0,    0,  504,    0,   41,
   42,    0,    0,    0,   43,    0,    0,   44,    0,   45,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   72,    0,  205,    0,   71,    0,    0,    0,    0,
    0,   46,   47,   48,   49,   50,   51,    0,    0,    0,
    0,    0,    0,   52,  225,    3,    4,    5,    0,   54,
   55,   56,   57,   58,  225,   59,   60,   61,   62,   63,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  291,    0,    0,    0,    0,    0,
  225,  225,  225,  225,  225,  225,    0,    0,    0,    0,
  225,  225,    0,    0,    0,    0,    0,    0,   72,    0,
  205,    0,   71,    0,    0,    0,    0,    0,   25,    0,
   26,   27,   28,   29,   30,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   41,  591,    3,    4,    5,   43,    0,    0,
    0,  584,   45,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   46,   47,   48,   49,   50,   51,
    0,    0,    0,    0,    0,    0,   52,    0,    0,    0,
    0,    0,   54,   55,   56,   57,   58,    0,   59,   60,
   61,   62,   63,    0,    0,    0,    0,   25,    0,   26,
   27,   28,   29,   30,   72,    0,  205,    0,   71,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   41,    3,    4,    5,    0,   43,    0,    0,    0,
    0,   45,    0,    0,    0,    0,    0,    0,    0,   72,
    0,  205,    0,   71,    0,    0,    0,  721,    0,    0,
    0,    0,    0,   46,   47,   48,   49,   50,   51,    0,
    0,    0,    0,    0,    0,   52,    0,    0,    0,    0,
    0,   54,   55,   56,   57,   58,    0,   59,   60,   61,
   62,   63,    0,    0,    0,   25,    0,   26,   27,   28,
   29,   30,    0,    0,    0,    0,    0,    0,    0,    3,
    4,    5,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   41,
    0,    0,    0,    0,   43,    0,    0,    0,    0,   45,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   46,   47,   48,   49,   50,   51,    0,    0,    0,
    0,    0,   25,   52,   26,   27,   28,   29,   30,   54,
   55,   56,   57,   58,    0,   59,   60,   61,   62,   63,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   41,  216,    0,    0,
    0,   43,    0,    0,    0,  216,   45,    0,  216,    0,
    0,    0,    0,    0,    0,    3,    4,    5,    0,    0,
    0,    0,  216,  216,  216,    0,  216,  216,   46,   47,
   48,   49,   50,   51,    0,    0,    0,    0,    0,    0,
   52,    0,    0,    0,    0,    0,   54,   55,   56,   57,
   58,    0,   59,   60,   61,   62,   63,  216,    0,    0,
    3,  422,    0,    0,  422,  422,  422,    0,  422,  422,
  422,  422,  422,  422,  422,  422,    0,    0,   25,    0,
   26,   27,   28,   29,   30,    0,  422,  422,  422,  422,
  422,  422,  422,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   41,    0,    0,    0,    0,   43,    0,  422,
  422,  422,   45,   25,    0,   26,   27,   28,   29,   30,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   46,   47,   48,   49,   50,   51,
    0,    0,  422,    0,  422,  255,   52,    0,    0,    0,
    0,    0,   54,   55,   56,   57,   58,   45,   59,   60,
   61,   62,   63,  224,    0,    0,    0,    0,  224,    0,
    0,  224,    0,    0,  224,    0,    0,    0,    0,   46,
   47,   48,   49,   50,   51,    0,    0,    0,  224,  224,
  224,   52,  224,  224,    0,    0,    0,   54,   55,   56,
   57,   58,    0,  256,   60,   61,   62,   63,  401,    0,
    0,  401,  401,  401,    0,  396,  401,  401,  401,  401,
  401,  401,  401,  224,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  401,  401,  401,  401,  401,  401,  401,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  224,    0,  224,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  401,  401,  401,    0,
    0,    0,    0,    0,    0,    0,    0,  337,    0,    0,
  337,  337,  337,    0,  337,  337,  337,  337,  337,  337,
  337,  337,    0,    0,    0,    0,    0,    0,    0,  401,
    0,  401,  337,  337,  337,    0,  337,  337,  337,    0,
    0,    0,  216,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  216,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  337,  337,  337,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  216,  216,
  216,  216,    0,    0,    0,    0,    0,    0,  216,  216,
    0,    0,    0,    0,    0,    0,    0,    0,  337,    0,
  337,    0,  422,  422,  422,    0,  422,  422,    0,  422,
    0,    0,  422,    0,    0,    0,  422,    0,  422,  422,
  422,    0,  422,  422,  422,  422,  422,  422,  422,  422,
  422,  422,    0,  422,  422,  422,  422,  422,  422,  422,
  422,  422,  422,  422,  422,  422,  422,  422,  422,  422,
  422,  499,  422,  422,  499,  499,  499,    0,  499,  499,
  499,  499,  499,  499,  499,  499,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  499,  499,  499,    0,
  499,  499,  499,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  499,
  499,  499,    0,    0,    0,    0,    0,    0,  224,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  224,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  499,    0,  499,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  224,  224,  224,  224,  224,  224,
    0,  396,    0,  401,  224,  224,  396,    0,    0,  401,
    0,    0,    0,  401,    0,  401,  401,  401,    0,  401,
  401,  401,  401,  401,  401,  401,  401,  401,  401,    0,
  401,  401,  401,  401,  401,  401,  401,  401,  401,  401,
  401,  401,  401,  401,  401,  401,  401,  401,    0,  401,
  401,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  337,  337,
  337,    0,  337,  337,    0,    0,    0,    0,  337,    0,
  351,    0,  337,  351,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  337,  337,
  337,  337,  337,  337,  337,  337,  337,  325,  337,  337,
  325,  325,  325,    0,  325,  325,  325,  325,  325,  325,
  325,  325,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  325,  325,  325,    0,  325,  325,  325,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  325,  325,  325,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  325,    0,
  325,    0,  499,  499,  499,    0,  499,  499,    0,    0,
  333,    0,  499,  333,  333,  333,  499,  394,  333,  333,
  333,  333,  333,  333,  333,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  333,  333,  333,    0,  333,
  333,  333,  499,  499,  499,  499,  499,  499,  499,  499,
  499,    0,  499,  499,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  333,  333,
  333,    0,    0,    0,    0,    0,    0,    0,    0,  305,
    0,    0,  305,  305,  305,    0,    0,  305,  305,  305,
  305,  305,  305,  305,    0,    0,    0,    0,    0,    0,
    0,  333,    0,  333,  305,  305,  305,    0,  305,  305,
  305,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  305,  305,  305,
    0,    0,    0,    0,    0,    0,    0,    0,  477,    0,
    0,  477,  477,  477,    0,    0,  477,  477,  477,  477,
  477,  477,  477,    0,    0,    0,    0,    0,    0,    0,
  305,    0,  305,  477,  477,  477,    0,  477,  477,  477,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  477,  477,  477,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  325,  325,
  325,    0,  325,  325,    0,    0,    0,    0,  325,  477,
    0,  477,  325,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  325,  325,
  325,  325,  325,  325,  325,  325,  325,    0,  325,  325,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  291,    0,    0,  291,  291,  291,    0,    0,
  291,  291,  291,  291,  291,  291,  291,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  291,  291,  291,
    0,  291,  291,  291,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  394,    0,  333,    0,    0,  394,    0,
    0,  333,    0,    0,    0,  333,    0,    0,    0,    0,
  291,  291,  291,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  333,  333,  333,  333,  333,  333,  333,  333,  333,
    0,  333,  333,  291,    0,  291,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  380,    0,    0,    0,  305,    0,    0,    0,  240,    0,
  305,  240,  240,  240,  305,    0,  240,  240,  240,  240,
  240,  240,  240,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  240,  240,  240,    0,  240,  240,  240,
  305,  305,  305,  305,  305,  305,  305,  305,  305,    0,
  305,  305,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  240,  240,  240,  388,
    0,    0,    0,  477,    0,    0,    0,  304,    0,  477,
  304,  304,  304,  477,    0,  304,  304,  304,  304,  304,
  304,  304,    0,    0,    0,    0,    0,    0,    0,  240,
    0,  240,  304,  304,  304,    0,  304,  304,  304,  477,
  477,  477,  477,  477,  477,  477,  477,  477,    0,  477,
  477,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  304,  304,  304,    0,    0,
    0,    0,    0,    0,    0,    0,  311,    0,    0,  311,
  311,  311,    0,    0,  311,  311,  311,  311,  311,  311,
  311,    0,    0,    0,    0,    0,    0,    0,  304,    0,
  304,  311,  311,  311,    0,  311,  311,  311,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  311,  311,  311,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  291,    0,    0,
    0,  237,    0,  291,  237,  237,  237,  291,    0,  237,
  237,  237,  237,  237,  237,  237,    0,  311,    0,  311,
    0,    0,    0,    0,    0,    0,  237,  237,  237,    0,
  237,  237,  237,  291,  291,  291,  291,  291,  291,  291,
  291,  291,    0,  291,  291,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  237,
  237,  237,    0,    0,    0,    0,    0,    0,    0,    0,
  325,    0,    0,  325,  325,  325,    0,    0,  325,  325,
  325,  325,  325,  325,  325,    0,    0,    0,    0,    0,
    0,    0,  237,    0,  237,    0,  325,  325,    0,  325,
  325,  325,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  240,    0,    0,    0,    0,    0,  240,
    0,    0,    0,  240,    0,    0,    0,    0,  325,  325,
  325,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  240,
  240,  240,  240,  240,  240,  240,  240,  240,    0,  240,
  240,  325,    0,  325,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  235,    0,    0,  235,  235,
  235,    0,  304,  235,  235,  235,  235,  235,  304,  235,
    0,    0,  304,    0,    0,    0,    0,    0,    0,    0,
  235,  235,  235,    0,  235,  235,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  304,  304,
  304,  304,  304,  304,  304,  304,  304,    0,  304,  304,
    0,    0,    0,    0,    0,  235,    0,    0,    0,    0,
    0,    0,    0,    0,  234,    0,    0,  234,  234,  234,
    0,  311,  234,  234,  234,  234,  234,  311,  234,    0,
    0,  311,    0,    0,    0,    0,  235,    0,  235,  234,
  234,  234,    0,  234,  234,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  311,  311,  311,
  311,  311,  311,  311,  311,  311,    0,  311,  311,    0,
    0,    0,    0,    0,  234,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  223,    0,    0,    0,    0,  223,
  219,    0,  223,    0,    0,  223,  237,    0,  219,    0,
    0,  219,  237,    0,    0,  234,  237,  234,    0,  223,
  223,  223,    0,  223,  223,  219,  219,  219,    0,  219,
  219,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  237,  237,  237,  237,  237,  237,  237,  237,
  237,    0,  237,  237,  223,    0,    0,    0,    0,    0,
  219,    0,    0,  222,    0,    0,    0,    0,  222,  221,
    0,  222,    0,    0,  222,  325,    0,  221,    0,    0,
  221,  325,    0,    0,    0,  223,    0,  223,  222,  222,
  222,  219,  222,  222,  221,  221,  221,    0,  221,  221,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  325,  325,  325,  325,  325,  325,  325,  325,  325,
    0,  325,  325,  222,    0,    0,    0,    0,    0,  221,
    0,    0,    0,    0,    0,    0,    0,    0,  220,    0,
    0,    0,    0,    0,  218,    0,  220,    0,    0,  220,
    0,    0,  218,    0,  222,  218,  222,    0,    0,    0,
  221,    0,  221,  220,  220,  220,    0,  220,  220,  218,
  218,  218,    0,  218,  218,    0,    0,    0,    0,    0,
  235,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  235,    0,    0,    0,    0,    0,    0,    0,  220,    0,
    0,    0,    0,    0,  218,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  235,  235,  235,  235,
  235,  235,  235,  235,  235,    0,  235,  235,    0,  220,
    0,  220,    0,    0,    0,  218,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  234,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  234,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  234,  234,  234,  234,  234,
  234,  234,  234,  234,    0,  234,  234,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  223,
    0,    0,    0,    0,    0,  219,    0,    0,    0,  223,
    0,    0,    0,    0,    0,  219,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  223,  223,  223,  223,    0,
    0,  219,  219,  219,  219,  223,  223,    0,    0,    0,
    0,  219,  219,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  222,    0,
    0,    0,    0,    0,  221,    0,    0,    0,  222,    0,
    0,    0,    0,    0,  221,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  222,  222,  222,  222,    0,    0,
  221,  221,  221,  221,  222,  222,    0,    0,    0,    0,
  221,  221,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  220,    0,    0,    0,    0,    0,  218,
    0,    0,    0,  220,    0,    0,    0,    0,    0,  218,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  220,
  220,  220,  220,    0,    0,  218,  218,  218,  218,  220,
  220,    0,    0,    0,    0,  218,  218,
};
short yyIsParser::yycheck[] = {                                      33,
    4,    5,    7,    8,   33,  167,   65,   67,   43,   94,
   66,   40,    4,    5,   70,   60,   40,   62,   47,   93,
   40,   40,   40,   91,   33,   40,   93,   40,  166,   93,
   40,   40,   40,   47,  558,   93,   47,   41,   47,   43,
   40,   45,  323,   40,   47,  125,  166,  143,   52,  145,
  146,  147,  148,  149,  150,  123,  152,  153,  306,   40,
   41,  503,    4,    5,  166,   69,  263,   71,   40,  266,
  349,  387,  106,  107,   33,   47,   58,  125,   44,   40,
   61,   42,  524,  331,    0,  124,    7,   58,   58,   61,
   40,  356,  125,   46,  413,  414,  415,    4,    5,   41,
   93,   40,   93,  413,   63,   52,   40,   93,   59,  356,
   41,   64,   63,  209,   64,  211,   41,  213,  214,  215,
   40,   41,   43,  288,   71,   40,   41,   69,   59,   40,
   65,   52,  217,   76,   44,   43,   43,   45,   91,   92,
   40,  123,   85,   59,   42,   66,   61,  412,  413,   70,
   71,  416,  123,  123,   40,   41,   62,  123,  254,   40,
  476,   42,  198,  167,   40,  412,  445,  202,   62,  416,
  403,   47,   40,   41,   62,   61,  413,  414,  415,   62,
  704,   40,   41,   93,  220,  245,  246,   93,   40,   41,
  249,   62,   44,   61,  290,   62,   40,   41,  202,   93,
   44,  261,   61,  108,  109,   93,   58,   59,  129,   61,
   93,  216,   40,   62,   58,   59,  250,   61,  257,   40,
  141,   91,   93,  283,  309,   42,   93,  287,  412,  413,
  340,  291,   58,   61,  155,  345,  416,   36,   37,   91,
  191,  396,  397,   42,   93,  249,  279,   91,   47,   41,
  309,  255,   44,  366,   40,  288,  369,   40,   41,  263,
  340,   44,  266,  123,  412,   91,   58,   59,  416,  550,
  205,  123,  520,  412,  471,   58,   59,  416,   61,  123,
  418,  202,  316,  123,  358,   33,  320,    4,    5,  123,
    7,  358,  340,   41,  358,  202,   44,  123,  418,   40,
  358,   93,  307,   40,   40,  256,   40,  249,   91,   41,
   58,   59,   44,  255,   58,   63,  418,  759,   59,  567,
   61,  242,   44,  336,   41,   59,   43,   61,   45,  412,
  255,  391,  356,  416,  390,   52,  356,  393,  123,  244,
  123,  361,  361,  123,  412,   93,  361,   91,  416,  394,
  395,  361,   69,  367,   71,   72,  367,   59,  279,  444,
  395,  361,  412,  413,  367,  358,  416,  358,  288,   59,
  290,  291,  358,  391,  294,  295,  296,  297,  298,  123,
  300,  301,  302,  303,  304,  305,  321,  416,  392,  449,
  394,  395,  325,  326,  412,  367,  400,  401,  402,  403,
  404,  405,  406,  407,  325,  326,  410,  416,  416,  413,
  402,  364,  412,  413,  406,  412,  416,  451,  452,  479,
  353,  354,  361,   61,  428,  429,  486,  361,  125,   91,
  490,  412,  353,  354,  355,  416,  357,   40,  155,  400,
  361,  123,  527,  124,  416,  366,  405,  368,  404,  370,
  392,  372,  394,  457,  375,  416,   59,  378,   61,  401,
  402,  403,  383,  405,  406,  407,  387,  471,  410,  390,
  474,  412,  393,  412,  395,  416,  401,  416,  412,  400,
  405,  414,  416,  404,  646,  202,  428,  429,  395,  398,
  399,  367,  412,  414,  590,  402,  416,  412,  126,  406,
  534,  416,  400,  428,  429,   38,  602,  603,  304,  354,
  306,  545,  412,  609,  610,  457,  416,  354,  416,  400,
  554,    0,  415,  583,  584,  242,  412,  587,  332,  333,
  416,  412,  249,  593,   41,  416,  592,   44,  255,  356,
  416,  446,  447,  412,  412,  450,  263,   59,  416,  266,
  304,  304,  306,  412,   33,  476,  413,  416,  413,   38,
  412,   40,  279,   42,  416,  413,  358,   46,  412,  355,
  356,   41,  416,  359,   44,  635,  368,  637,  331,  639,
   59,  640,  279,  400,  412,   64,  412,  361,  416,   41,
  416,  288,   44,  653,  413,  412,  413,  631,  632,  416,
  604,  686,  391,  663,  537,  356,  327,  611,  329,  330,
  358,  356,   91,   92,  547,   58,  537,  356,  355,  356,
  368,  356,  359,  339,  340,  558,  547,  686,   41,  412,
  400,  401,  402,  416,  118,  119,  640,  558,   40,    4,
    5,   41,  646,  358,  123,   59,  125,  126,    4,    5,
  342,  711,   91,  367,   59,  356,  690,  405,  718,   40,
  391,  721,   59,   41,  724,   61,  671,  356,  412,   93,
   61,  592,  416,  367,  367,  392,  681,  394,  395,  358,
  358,   93,  742,  400,  401,  402,  403,  404,  405,  406,
  407,   41,   93,  410,   93,   61,  413,   58,  640,  125,
  495,  388,  389,  390,  391,  392,  393,  340,  339,  504,
  505,  428,  429,  773,  125,  345,  512,   58,  358,  515,
  780,   40,  361,  367,  520,  361,  730,  787,   61,   93,
  734,  791,   59,  368,   93,   93,   93,   33,   93,   93,
  457,  494,   38,   58,   40,  805,   42,   93,   58,   93,
   46,  358,  685,   93,  471,   93,   93,  474,  512,  512,
  358,  694,  515,   59,  685,   59,  520,   93,   64,   93,
   93,  704,   93,  694,  358,  708,   93,   93,  257,  258,
  259,  260,  261,  704,  818,   93,   93,  708,   93,   93,
   93,   93,   93,   93,   41,   91,   92,   38,   93,   40,
  279,   42,   91,   40,   59,   59,   40,   40,   40,  288,
  289,  290,  291,  125,  567,  294,  295,  296,  297,  298,
   40,  300,  301,  302,  303,  304,  305,  123,  125,  624,
  126,   40,   40,   40,   40,   40,   40,  316,  317,  318,
  123,  123,    2,  322,  498,  324,  325,  326,  327,  328,
  329,  330,  331,  332,  333,  511,  335,  499,  671,  338,
  339,  340,  341,  512,   87,  494,  345,  681,  520,   31,
  665,  686,  527,  450,  353,  316,  540,  356,  357,  542,
  545,  550,  361,  554,  552,  364,  288,  366,  290,  291,
   32,  567,  294,  295,  296,  297,  298,  226,  300,  301,
  302,  303,  304,  305,  355,  129,  361,  357,  366,  388,
  389,  390,  391,  392,  393,  368,  370,  378,  375,  383,
  141,  400,  404,  640,  403,  372,  418,  406,  407,  408,
  409,  410,  418,  412,  413,  414,  415,  416,  288,  474,
  290,  291,  425,  471,  294,  295,  296,  297,  298,  640,
  300,  301,  302,  303,  304,  305,   -1,  193,   -1,   -1,
   -1,  257,  258,  259,  260,  261,   33,   -1,   -1,   -1,
   -1,   38,   -1,   40,   -1,   42,   -1,   -1,   -1,   46,
   -1,   -1,   -1,  279,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  288,  289,  290,  291,   -1,   64,  294,  295,
  296,  297,  298,   -1,  300,  301,  302,  303,  304,  305,
  412,   -1,   -1,   -1,  416,   -1,   -1,   -1,  259,   -1,
  316,  317,  318,   -1,   91,   92,  322,   -1,  324,  325,
  326,  327,  328,  329,  330,  331,  332,  333,   -1,  335,
   -1,   -1,  338,  339,   -1,  341,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  123,  353,   -1,  126,
  356,  357,  412,   -1,   -1,  361,  416,   -1,  364,   -1,
  366,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  322,   -1,  324,  325,  326,  327,  328,   -1,   -1,
   -1,   -1,  388,  389,  390,  391,  392,  393,   -1,   -1,
   -1,   -1,   -1,   -1,  400,   -1,   -1,  403,   -1,   -1,
  406,  407,  408,  409,  410,   -1,  412,  413,  414,  415,
  416,   -1,   -1,   -1,   33,  366,   -1,   -1,   -1,   38,
   -1,   40,   -1,   42,   -1,   -1,   -1,   46,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  388,  389,  390,
  391,  392,  393,   -1,   -1,   64,   -1,   -1,   -1,  400,
   -1,   -1,   -1,   -1,   -1,  406,  407,  408,  409,  410,
   -1,  412,  413,  414,  415,  416,   -1,   -1,   -1,   -1,
   -1,   -1,   91,   92,   -1,   -1,   -1,   -1,   -1,   -1,
  257,  258,  259,  260,  261,   -1,   -1,   -1,  125,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  279,   -1,   -1,   -1,   -1,  126,   -1,   -1,
   -1,  288,  289,  290,  291,   -1,   -1,  294,  295,  296,
  297,  298,   61,  300,  301,  302,  303,  304,  305,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  316,
  317,  318,   -1,   -1,   61,  322,   -1,  324,  325,  326,
  327,  328,  329,  330,  331,  332,  333,   -1,  335,   -1,
   -1,  338,  339,   -1,  341,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  353,   -1,   -1,  356,
  357,   -1,   -1,   -1,  361,   -1,   -1,  364,   -1,  366,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   33,   -1,   -1,
   -1,   -1,   38,   -1,   40,   -1,   42,   -1,   -1,   -1,
   46,  388,  389,  390,  391,  392,  393,   -1,   -1,   -1,
   -1,   -1,   -1,  400,   -1,   -1,  403,   -1,   64,  406,
  407,  408,  409,  410,   -1,  412,  413,  414,  415,  416,
  259,  260,  261,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  288,   -1,  290,  291,   91,   92,  294,  295,  296,
  297,  298,   -1,  300,  301,  302,  303,  304,  305,  288,
   -1,  290,  291,   -1,   -1,  294,  295,  296,  297,  298,
   -1,  300,  301,  302,  303,  304,  305,  123,   -1,  125,
  126,   -1,   -1,  330,   -1,   -1,   -1,  316,  317,  318,
   -1,   -1,   -1,  322,   -1,  324,  325,  326,  327,  328,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   33,   -1,   -1,   -1,   -1,   38,   -1,   40,   -1,   42,
   -1,   -1,   33,   46,   -1,   -1,   -1,  356,  357,   -1,
   41,   -1,  361,   44,   -1,  364,   -1,  366,   -1,   -1,
   -1,   64,   -1,   -1,   -1,   -1,   -1,   58,   59,   -1,
   -1,   -1,   63,   -1,   -1,   -1,   -1,   -1,   -1,  388,
  389,  390,  391,  392,  393,   -1,   -1,   -1,   91,   92,
   -1,  400,   -1,   -1,  403,   -1,   -1,  406,  407,  408,
  409,  410,   93,  412,  413,  414,  415,  416,   -1,   -1,
   -1,   41,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  123,   -1,  125,  126,   -1,   -1,   -1,   -1,   58,   -1,
   -1,   61,   -1,  259,  260,  261,   -1,   -1,   -1,   -1,
   -1,  370,  371,  372,   -1,  374,  375,  376,  377,  378,
  379,  380,  381,  382,  383,   -1,  385,  386,  387,   -1,
   -1,   91,  288,  370,  371,  372,   -1,  374,  375,  376,
  377,  378,  379,  380,  381,  382,  383,   -1,  385,  386,
  387,  388,  389,  390,  391,  392,  393,   -1,   -1,   -1,
  316,  317,  318,  123,   -1,   -1,  322,   -1,  324,  325,
  326,  327,  328,   -1,   -1,  331,  332,  333,   -1,  335,
   -1,   33,  338,  339,   -1,  341,   38,   -1,   40,   -1,
   42,   -1,   -1,   -1,   46,   -1,   -1,  353,   -1,   -1,
  356,  357,   -1,   -1,   -1,  361,   -1,   -1,  364,   -1,
  366,   -1,   64,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  259,  260,  261,   -1,
   -1,   -1,  388,  389,  390,  391,  392,  393,   -1,   91,
   92,   -1,   -1,   -1,  400,   -1,   -1,  403,   -1,   -1,
  406,  407,  408,  409,  410,  288,  412,  413,  414,  415,
  416,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  123,   -1,   -1,  126,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  316,  317,  318,   -1,   -1,   -1,  322,
   -1,  324,  325,  326,  327,  328,   -1,   -1,  331,  332,
  333,   -1,  335,   -1,   33,  338,  339,   -1,  341,   38,
   -1,   40,   -1,   42,   -1,   -1,   -1,   46,   33,   -1,
  353,   -1,   -1,  356,  357,   -1,   41,   -1,  361,   44,
   -1,  364,   -1,  366,   -1,   64,   -1,  358,   -1,   -1,
   -1,   -1,   -1,   58,   59,   -1,   -1,  368,   63,   -1,
   -1,   -1,   -1,   -1,   -1,  388,  389,  390,  391,  392,
  393,   -1,   91,   92,   -1,   -1,   -1,  400,   -1,   -1,
  403,   -1,   -1,  406,  407,  408,  409,  410,   93,  412,
  413,  414,  415,  416,  405,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  123,   -1,  356,  126,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  259,  260,  261,
  370,  371,  372,   -1,  374,  375,  376,  377,  378,  379,
  380,  381,  382,  383,   -1,  385,  386,  387,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  288,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  412,   -1,   -1,   -1,  416,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  316,  317,  318,   -1,   -1,   -1,
  322,   -1,  324,  325,  326,  327,  328,   -1,   -1,  331,
  332,  333,   -1,  335,   -1,   33,  338,  339,   -1,  341,
   38,   -1,   40,  345,   42,   -1,   -1,   -1,   46,   -1,
   -1,  353,   -1,   -1,  356,  357,   -1,   -1,   -1,  361,
   -1,   -1,  364,   -1,  366,   -1,   64,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  259,  260,  261,   -1,   -1,   -1,  388,  389,  390,  391,
  392,  393,   -1,   91,   92,   -1,   -1,   -1,  400,   -1,
   -1,  403,   -1,   -1,  406,  407,  408,  409,  410,  288,
  412,  413,  414,  415,  416,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  123,   -1,   -1,  126,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  316,  317,  318,
   -1,   -1,   -1,  322,   -1,  324,  325,  326,  327,  328,
   -1,   -1,  331,  332,  333,   -1,  335,   -1,   -1,  338,
  339,   -1,  341,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  353,   -1,   -1,  356,  357,   -1,
   -1,   -1,  361,   -1,   -1,  364,   -1,  366,   -1,   -1,
   -1,   -1,   -1,  358,   -1,   33,   -1,   -1,   -1,   -1,
   38,   -1,   40,  368,   42,   -1,   -1,   -1,   46,  388,
  389,  390,  391,  392,  393,   -1,   -1,   -1,   -1,   -1,
   -1,  400,   60,   -1,  403,   63,   64,  406,  407,  408,
  409,  410,   -1,  412,  413,  414,  415,  416,   -1,  404,
  405,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   91,   92,   -1,   -1,   33,   -1,   -1,
   -1,  259,  260,  261,  288,   41,  290,  291,   44,   -1,
  294,  295,  296,  297,  298,   -1,  300,  301,  302,  303,
  304,  305,   58,   59,   33,   -1,   -1,   63,  126,   38,
  288,   -1,   41,   -1,   43,   44,   45,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  330,   -1,   -1,   58,
   59,   60,   -1,   62,   63,   -1,   -1,   93,  316,  317,
  318,   -1,   -1,   -1,  322,   -1,  324,  325,  326,  327,
  328,   -1,   -1,  331,  332,  333,  125,  335,   -1,   -1,
  338,  339,   -1,  341,   93,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  353,   -1,   -1,  356,  357,
   -1,   -1,   -1,  361,   -1,   -1,  364,   -1,  366,   33,
   -1,   -1,   -1,   -1,   38,  124,   40,  126,   42,   -1,
   -1,   -1,   46,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  388,  389,  390,  391,  392,  393,   60,   -1,   -1,   63,
   64,   -1,  400,   -1,   -1,  403,   -1,   -1,  406,  407,
  408,  409,  410,   -1,  412,  413,  414,  415,  416,   -1,
   -1,  259,  260,  261,   -1,   -1,   -1,   91,   92,   -1,
   -1,   -1,   -1,   -1,   -1,  125,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   33,   -1,   -1,   36,   37,   38,
  288,   -1,   41,   42,   43,   44,   45,   -1,   47,   -1,
   -1,   -1,  126,   -1,   -1,   -1,   -1,   -1,   -1,   58,
   59,   60,   -1,   62,   63,   -1,   -1,   -1,  316,  317,
  318,   -1,   -1,   -1,  322,   -1,  324,  325,  326,  327,
  328,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  288,
  289,  290,  291,  125,   93,  294,  295,  296,  297,  298,
   -1,  300,  301,  302,  303,  304,  305,   -1,  356,  357,
  358,   -1,   -1,  361,   -1,   -1,  364,   -1,  366,   33,
   -1,   -1,   -1,   -1,   38,  124,   40,  126,   42,   -1,
  329,   -1,   46,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  388,  389,  390,  391,  392,  393,   60,   -1,   -1,   63,
   64,   -1,  400,   -1,   -1,  403,   -1,   -1,  406,  407,
  408,  409,  410,   -1,  412,  413,  414,  415,  416,   -1,
   -1,   -1,  358,   -1,   -1,   -1,   -1,   91,   92,  279,
   -1,   -1,  368,   -1,   -1,  259,  260,  261,  288,   -1,
  290,  291,   -1,   -1,  294,  295,  296,  297,  298,  358,
  300,  301,  302,  303,  304,  305,   -1,   -1,   -1,  368,
  396,  397,  126,   -1,  288,   -1,   -1,   -1,  404,  405,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  329,
  330,   -1,   -1,   -1,   -1,  394,  395,  396,  397,  398,
  399,   -1,  316,  317,  318,  404,  405,   -1,  322,   -1,
  324,  325,  326,  327,  328,   -1,  288,  289,  290,  291,
   -1,   -1,  294,  295,  296,  297,  298,   -1,  300,  301,
  302,  303,  304,  305,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  356,  357,  358,   -1,   -1,  361,   -1,   -1,
  364,   -1,  366,   33,   -1,   -1,   -1,  329,   38,   -1,
   40,   -1,   42,   -1,   -1,   -1,   46,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  388,  389,  390,  391,  392,  393,
   60,   -1,   -1,   63,   64,   -1,  400,   -1,   -1,  403,
   -1,   -1,  406,  407,  408,  409,  410,   -1,  412,  413,
  414,  415,  416,   -1,   -1,  259,  260,  261,   -1,   -1,
   -1,   91,   92,   -1,   -1,   -1,   -1,   -1,   -1,  358,
   -1,   -1,   33,   -1,   -1,   -1,   -1,   -1,   -1,  368,
   41,   -1,   -1,   44,  288,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  126,   58,   59,   60,
   -1,   62,   63,   -1,   -1,  394,  395,  396,  397,  398,
  399,   -1,  316,  317,  318,  404,  405,   -1,  322,   -1,
  324,  325,  326,  327,  328,   -1,   -1,  288,   -1,  290,
  291,   -1,   93,  294,  295,  296,  297,  298,   -1,  300,
  301,  302,  303,  304,  305,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  356,  357,  358,   -1,   -1,  361,   -1,   -1,
  364,   -1,  366,   33,   -1,   -1,   -1,   -1,   38,   -1,
   40,   -1,   42,   -1,   -1,   -1,   46,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  388,  389,  390,  391,  392,  393,
   60,   -1,   -1,   63,   64,   -1,  400,   -1,   -1,  403,
   -1,   -1,  406,  407,  408,  409,  410,   -1,  412,  413,
  414,  415,  416,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   91,   92,   -1,   -1,   -1,   -1,   -1,   -1,  259,
  260,  261,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   33,   -1,   -1,   -1,   -1,   38,   -1,   -1,
   41,  412,   43,   44,   45,  416,  126,   -1,  288,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   58,   59,   60,
   -1,   62,   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  316,  317,  318,   -1,
   -1,   -1,  322,   -1,  324,  325,  326,  327,  328,   -1,
   -1,   -1,   93,   -1,  288,   -1,  290,  291,   -1,   -1,
  294,  295,  296,  297,  298,   -1,  300,  301,  302,  303,
  304,  305,   -1,   -1,   -1,   -1,  356,  357,  358,   -1,
   -1,  361,   -1,  124,  364,  126,  366,   33,   -1,   -1,
   -1,   -1,   38,   -1,   40,  329,   42,   -1,   -1,   -1,
   46,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  388,  389,
  390,  391,  392,  393,   60,   -1,   -1,   63,   64,   -1,
  400,   -1,   -1,  403,   -1,   -1,  406,  407,  408,  409,
  410,   -1,  412,  413,  414,  415,  416,   -1,   -1,  259,
  260,  261,   -1,   -1,   -1,   91,   92,  358,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  368,   -1,   -1,
   -1,   -1,   33,   -1,   -1,   36,   37,   38,  288,   -1,
   41,   42,   43,   44,   45,   -1,   47,   -1,   -1,   -1,
  126,   -1,   -1,  394,  395,  396,  397,   58,   59,   60,
   -1,   62,   63,  404,  405,   -1,  316,  317,  318,   -1,
   -1,   -1,  322,   -1,  324,  325,  326,  327,  328,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  288,   -1,  290,
  291,   -1,   93,  294,  295,  296,  297,  298,   -1,  300,
  301,  302,  303,  304,  305,   -1,  356,  357,  358,   -1,
   -1,  361,   -1,   -1,  364,   -1,  366,   33,   -1,   -1,
   -1,   -1,   38,  124,   40,  126,   42,   -1,  329,   -1,
   46,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  388,  389,
  390,  391,  392,  393,   60,   -1,   -1,   63,   64,   -1,
  400,   -1,   -1,  403,   -1,   -1,  406,  407,  408,  409,
  410,   -1,  412,  413,  414,  415,  416,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   91,   92,   -1,   33,   -1,
   -1,   -1,   -1,  259,  260,  261,   41,  358,   -1,   44,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  368,   -1,   -1,
   -1,   -1,   -1,   58,   59,   -1,   -1,   -1,   63,   -1,
  126,   -1,  288,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  394,  395,  396,  397,  398,  399,   -1,
   -1,   -1,   -1,  404,  405,   -1,   -1,   -1,   93,   -1,
  316,  317,  318,   -1,   -1,   -1,  322,   -1,  324,  325,
  326,  327,  328,  125,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   33,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   41,
   -1,   -1,   44,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  356,  357,  358,   -1,   -1,  361,   58,   59,  364,   33,
  366,   63,   -1,   -1,   38,   -1,   40,   -1,   42,   -1,
   44,   -1,   46,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  388,  389,  390,  391,  392,  393,   -1,   -1,
   64,   93,   -1,   -1,  400,   -1,   -1,  403,   -1,   -1,
  406,  407,  408,  409,  410,   -1,  412,  413,  414,  415,
  416,   -1,   -1,  259,  260,  261,   -1,   91,   92,   93,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  358,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  368,   -1,   -1,
   -1,   -1,  288,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  126,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  394,  395,  396,  397,  398,  399,   -1,
  316,  317,  318,  404,  405,   -1,  322,  279,  324,  325,
  326,  327,  328,   -1,   -1,   -1,  288,   -1,  290,  291,
   -1,   -1,  294,  295,  296,  297,  298,   -1,  300,  301,
  302,  303,  304,  305,   -1,   -1,   -1,   -1,   -1,   -1,
  356,  357,  358,   -1,   -1,  361,   -1,   33,  364,   -1,
  366,   -1,   38,   -1,   40,   41,   42,  329,  330,   -1,
   46,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  388,  389,  390,  391,  392,  393,   64,   -1,
   -1,   -1,   -1,   -1,  400,   -1,   -1,  403,   -1,   -1,
  406,  407,  408,  409,  410,   -1,  412,  413,  414,  415,
  416,   -1,   -1,  358,   -1,   91,   92,   -1,   -1,   -1,
   -1,   -1,   -1,  368,   -1,  259,  260,  261,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  126,  396,  397,   -1,   -1,   -1,   -1,   -1,   -1,  404,
  405,   -1,   -1,   -1,   -1,   -1,   -1,   33,   -1,   -1,
   -1,   -1,   38,   -1,   40,   -1,   42,   -1,   -1,   -1,
   46,   -1,  316,  317,  318,   -1,   -1,   -1,  322,   -1,
  324,  325,  326,  327,  328,   -1,  358,   -1,   64,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  368,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  356,  357,   -1,   91,   92,  361,   -1,   -1,
  364,   -1,  366,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  404,  405,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  388,  389,  390,  391,  392,  393,
  126,   -1,   -1,   -1,   -1,   -1,  400,   -1,   -1,  403,
   -1,   -1,  406,  407,  408,  409,  410,   -1,  412,  413,
  414,  415,  416,  259,  260,  261,   33,   -1,   -1,   -1,
   -1,   38,   -1,   40,   -1,   42,   -1,   -1,   -1,   46,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  288,   -1,   -1,   -1,   -1,   64,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  316,  317,  318,   -1,   91,   92,  322,   -1,  324,  325,
  326,  327,  328,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  126,
  356,  357,   -1,   -1,   -1,  361,   -1,   -1,  364,   -1,
  366,   -1,   -1,  259,  260,  261,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  388,  389,  390,  391,  392,  393,   -1,   -1,
   -1,   -1,  288,   -1,  400,   -1,   -1,  403,   -1,   -1,
  406,  407,  408,  409,  410,   -1,  412,  413,  414,  415,
  416,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  316,  317,  318,   -1,   -1,   -1,  322,   -1,  324,  325,
  326,  327,  328,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  356,  357,   -1,   -1,   -1,  361,   -1,   -1,  364,   -1,
  366,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  259,  260,  261,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  388,  389,  390,  391,  392,  393,   -1,   -1,
   -1,   -1,   -1,   -1,  400,   -1,   -1,  403,   -1,   -1,
  406,  407,  408,  409,  410,   -1,  412,  413,  414,  415,
  416,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  316,
  317,  318,   -1,   -1,   -1,  322,   -1,  324,  325,  326,
  327,  328,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   38,   -1,   40,   -1,   42,  356,
  357,   -1,   46,   -1,  361,   -1,   -1,  364,   -1,  366,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   64,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  388,  389,  390,  391,  392,  393,   -1,   -1,   -1,
   -1,   -1,   -1,  400,   -1,   -1,  403,   91,   92,  406,
  407,  408,  409,  410,   -1,  412,  413,  414,  415,  416,
   33,   -1,   -1,   36,   37,   38,   -1,   40,   41,   42,
   43,   44,   45,   46,   47,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  126,   -1,   -1,   58,   59,   60,   -1,   62,
   63,   64,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   91,   92,
   93,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   33,
   -1,   -1,   36,   37,   38,   -1,   40,   41,   42,   43,
   44,   45,   46,   47,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  124,   -1,  126,   58,   59,   60,   -1,   62,   63,
   64,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   91,   92,   93,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   33,   -1,
   -1,   36,   37,   38,   -1,   40,   41,   42,   43,   44,
   45,   46,   47,   -1,   -1,  259,  260,  261,   -1,   -1,
  124,   -1,  126,   58,   59,   60,   -1,   62,   63,   64,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   91,   92,   93,   -1,
   -1,   38,   -1,   40,   -1,   42,   -1,   -1,   -1,   46,
   -1,   -1,  316,  317,  318,   -1,   -1,   -1,  322,   -1,
  324,  325,  326,  327,  328,   -1,   -1,   64,   -1,  124,
   -1,  126,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   33,
   -1,   -1,   -1,   -1,   38,   -1,   -1,   41,   -1,   -1,
   44,   -1,  356,  357,   91,   92,   -1,  361,   -1,   -1,
  364,   -1,  366,   -1,   58,   59,   60,   -1,   62,   63,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  388,  389,  390,  391,  392,  393,
   -1,   -1,   -1,   -1,   -1,   -1,  400,   -1,   -1,   93,
   -1,   -1,  406,  407,  408,  409,  410,   -1,  412,  413,
  414,  415,  416,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  354,  355,  356,   -1,  358,  359,   -1,   -1,   -1,
  124,  364,  126,   -1,  367,  368,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   38,   -1,   40,   -1,   42,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  391,   -1,
   -1,  394,  395,  396,  397,  398,  399,  400,  401,  402,
   64,  404,  405,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  416,   -1,   -1,   -1,   -1,   -1,   -1,
  354,  355,  356,   -1,  358,  359,   -1,   91,   -1,   -1,
  364,   -1,   -1,   -1,  368,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  259,  260,  261,   -1,   -1,   -1,   -1,   -1,
  394,  395,  396,  397,  398,  399,  400,  401,  402,   -1,
  404,  405,   -1,   38,   -1,   40,   -1,   42,  412,   -1,
   -1,   46,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  356,   -1,  358,   -1,   -1,  361,   -1,   -1,  364,
   -1,   -1,   -1,  368,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  322,   -1,  324,  325,  326,
  327,  328,   -1,   -1,   -1,   -1,   91,   -1,   -1,  394,
  395,  396,  397,  398,  399,  400,  401,  402,   -1,  404,
  405,   -1,   -1,   -1,   -1,   -1,   -1,  412,   -1,  356,
  357,   -1,   -1,   -1,  361,   -1,   -1,  364,   -1,  366,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   38,   -1,   40,   -1,   42,   -1,   -1,   -1,   -1,
   -1,  388,  389,  390,  391,  392,  393,   -1,   -1,   -1,
   -1,   -1,   -1,  400,  358,  259,  260,  261,   -1,  406,
  407,  408,  409,  410,  368,  412,  413,  414,  415,  416,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   91,   -1,   -1,   -1,   -1,   -1,
  394,  395,  396,  397,  398,  399,   -1,   -1,   -1,   -1,
  404,  405,   -1,   -1,   -1,   -1,   -1,   -1,   38,   -1,
   40,   -1,   42,   -1,   -1,   -1,   -1,   -1,  322,   -1,
  324,  325,  326,  327,  328,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  356,  357,  259,  260,  261,  361,   -1,   -1,
   -1,   91,  366,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  388,  389,  390,  391,  392,  393,
   -1,   -1,   -1,   -1,   -1,   -1,  400,   -1,   -1,   -1,
   -1,   -1,  406,  407,  408,  409,  410,   -1,  412,  413,
  414,  415,  416,   -1,   -1,   -1,   -1,  322,   -1,  324,
  325,  326,  327,  328,   38,   -1,   40,   -1,   42,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  356,  259,  260,  261,   -1,  361,   -1,   -1,   -1,
   -1,  366,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   38,
   -1,   40,   -1,   42,   -1,   -1,   -1,   91,   -1,   -1,
   -1,   -1,   -1,  388,  389,  390,  391,  392,  393,   -1,
   -1,   -1,   -1,   -1,   -1,  400,   -1,   -1,   -1,   -1,
   -1,  406,  407,  408,  409,  410,   -1,  412,  413,  414,
  415,  416,   -1,   -1,   -1,  322,   -1,  324,  325,  326,
  327,  328,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  259,
  260,  261,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  356,
   -1,   -1,   -1,   -1,  361,   -1,   -1,   -1,   -1,  366,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  388,  389,  390,  391,  392,  393,   -1,   -1,   -1,
   -1,   -1,  322,  400,  324,  325,  326,  327,  328,  406,
  407,  408,  409,  410,   -1,  412,  413,  414,  415,  416,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  356,   33,   -1,   -1,
   -1,  361,   -1,   -1,   -1,   41,  366,   -1,   44,   -1,
   -1,   -1,   -1,   -1,   -1,  259,  260,  261,   -1,   -1,
   -1,   -1,   58,   59,   60,   -1,   62,   63,  388,  389,
  390,  391,  392,  393,   -1,   -1,   -1,   -1,   -1,   -1,
  400,   -1,   -1,   -1,   -1,   -1,  406,  407,  408,  409,
  410,   -1,  412,  413,  414,  415,  416,   93,   -1,   -1,
  259,   33,   -1,   -1,   36,   37,   38,   -1,   40,   41,
   42,   43,   44,   45,   46,   47,   -1,   -1,  322,   -1,
  324,  325,  326,  327,  328,   -1,   58,   59,   60,   61,
   62,   63,   64,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  356,   -1,   -1,   -1,   -1,  361,   -1,   91,
   92,   93,  366,  322,   -1,  324,  325,  326,  327,  328,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  388,  389,  390,  391,  392,  393,
   -1,   -1,  124,   -1,  126,  354,  400,   -1,   -1,   -1,
   -1,   -1,  406,  407,  408,  409,  410,  366,  412,  413,
  414,  415,  416,   33,   -1,   -1,   -1,   -1,   38,   -1,
   -1,   41,   -1,   -1,   44,   -1,   -1,   -1,   -1,  388,
  389,  390,  391,  392,  393,   -1,   -1,   -1,   58,   59,
   60,  400,   62,   63,   -1,   -1,   -1,  406,  407,  408,
  409,  410,   -1,  412,  413,  414,  415,  416,   33,   -1,
   -1,   36,   37,   38,   -1,   40,   41,   42,   43,   44,
   45,   46,   47,   93,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   58,   59,   60,   61,   62,   63,   64,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  124,   -1,  126,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   91,   92,   93,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   33,   -1,   -1,
   36,   37,   38,   -1,   40,   41,   42,   43,   44,   45,
   46,   47,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  124,
   -1,  126,   58,   59,   60,   -1,   62,   63,   64,   -1,
   -1,   -1,  358,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  368,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   91,   92,   93,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  394,  395,
  396,  397,   -1,   -1,   -1,   -1,   -1,   -1,  404,  405,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  124,   -1,
  126,   -1,  354,  355,  356,   -1,  358,  359,   -1,  361,
   -1,   -1,  364,   -1,   -1,   -1,  368,   -1,  370,  371,
  372,   -1,  374,  375,  376,  377,  378,  379,  380,  381,
  382,  383,   -1,  385,  386,  387,  388,  389,  390,  391,
  392,  393,  394,  395,  396,  397,  398,  399,  400,  401,
  402,   33,  404,  405,   36,   37,   38,   -1,   40,   41,
   42,   43,   44,   45,   46,   47,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   58,   59,   60,   -1,
   62,   63,   64,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   91,
   92,   93,   -1,   -1,   -1,   -1,   -1,   -1,  358,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  368,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  124,   -1,  126,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  394,  395,  396,  397,  398,  399,
   -1,  356,   -1,  358,  404,  405,  361,   -1,   -1,  364,
   -1,   -1,   -1,  368,   -1,  370,  371,  372,   -1,  374,
  375,  376,  377,  378,  379,  380,  381,  382,  383,   -1,
  385,  386,  387,  388,  389,  390,  391,  392,  393,  394,
  395,  396,  397,  398,  399,  400,  401,  402,   -1,  404,
  405,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  354,  355,
  356,   -1,  358,  359,   -1,   -1,   -1,   -1,  364,   -1,
  366,   -1,  368,  369,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  394,  395,
  396,  397,  398,  399,  400,  401,  402,   33,  404,  405,
   36,   37,   38,   -1,   40,   41,   42,   43,   44,   45,
   46,   47,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   58,   59,   60,   -1,   62,   63,   64,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   91,   92,   93,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  124,   -1,
  126,   -1,  354,  355,  356,   -1,  358,  359,   -1,   -1,
   33,   -1,  364,   36,   37,   38,  368,   40,   41,   42,
   43,   44,   45,   46,   47,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   58,   59,   60,   -1,   62,
   63,   64,  394,  395,  396,  397,  398,  399,  400,  401,
  402,   -1,  404,  405,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   91,   92,
   93,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   33,
   -1,   -1,   36,   37,   38,   -1,   -1,   41,   42,   43,
   44,   45,   46,   47,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  124,   -1,  126,   58,   59,   60,   -1,   62,   63,
   64,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   91,   92,   93,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   33,   -1,
   -1,   36,   37,   38,   -1,   -1,   41,   42,   43,   44,
   45,   46,   47,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  124,   -1,  126,   58,   59,   60,   -1,   62,   63,   64,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   91,   92,   93,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  354,  355,
  356,   -1,  358,  359,   -1,   -1,   -1,   -1,  364,  124,
   -1,  126,  368,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  394,  395,
  396,  397,  398,  399,  400,  401,  402,   -1,  404,  405,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   33,   -1,   -1,   36,   37,   38,   -1,   -1,
   41,   42,   43,   44,   45,   46,   47,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   58,   59,   60,
   -1,   62,   63,   64,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  356,   -1,  358,   -1,   -1,  361,   -1,
   -1,  364,   -1,   -1,   -1,  368,   -1,   -1,   -1,   -1,
   91,   92,   93,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  394,  395,  396,  397,  398,  399,  400,  401,  402,
   -1,  404,  405,  124,   -1,  126,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  354,   -1,   -1,   -1,  358,   -1,   -1,   -1,   33,   -1,
  364,   36,   37,   38,  368,   -1,   41,   42,   43,   44,
   45,   46,   47,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   58,   59,   60,   -1,   62,   63,   64,
  394,  395,  396,  397,  398,  399,  400,  401,  402,   -1,
  404,  405,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   91,   92,   93,  354,
   -1,   -1,   -1,  358,   -1,   -1,   -1,   33,   -1,  364,
   36,   37,   38,  368,   -1,   41,   42,   43,   44,   45,
   46,   47,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  124,
   -1,  126,   58,   59,   60,   -1,   62,   63,   64,  394,
  395,  396,  397,  398,  399,  400,  401,  402,   -1,  404,
  405,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   91,   92,   93,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   33,   -1,   -1,   36,
   37,   38,   -1,   -1,   41,   42,   43,   44,   45,   46,
   47,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  124,   -1,
  126,   58,   59,   60,   -1,   62,   63,   64,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   91,   92,   93,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  358,   -1,   -1,
   -1,   33,   -1,  364,   36,   37,   38,  368,   -1,   41,
   42,   43,   44,   45,   46,   47,   -1,  124,   -1,  126,
   -1,   -1,   -1,   -1,   -1,   -1,   58,   59,   60,   -1,
   62,   63,   64,  394,  395,  396,  397,  398,  399,  400,
  401,  402,   -1,  404,  405,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   91,
   92,   93,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   33,   -1,   -1,   36,   37,   38,   -1,   -1,   41,   42,
   43,   44,   45,   46,   47,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  124,   -1,  126,   -1,   59,   60,   -1,   62,
   63,   64,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  358,   -1,   -1,   -1,   -1,   -1,  364,
   -1,   -1,   -1,  368,   -1,   -1,   -1,   -1,   91,   92,
   93,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  394,
  395,  396,  397,  398,  399,  400,  401,  402,   -1,  404,
  405,  124,   -1,  126,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   33,   -1,   -1,   36,   37,
   38,   -1,  358,   41,   42,   43,   44,   45,  364,   47,
   -1,   -1,  368,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   58,   59,   60,   -1,   62,   63,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  394,  395,
  396,  397,  398,  399,  400,  401,  402,   -1,  404,  405,
   -1,   -1,   -1,   -1,   -1,   93,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   33,   -1,   -1,   36,   37,   38,
   -1,  358,   41,   42,   43,   44,   45,  364,   47,   -1,
   -1,  368,   -1,   -1,   -1,   -1,  124,   -1,  126,   58,
   59,   60,   -1,   62,   63,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  394,  395,  396,
  397,  398,  399,  400,  401,  402,   -1,  404,  405,   -1,
   -1,   -1,   -1,   -1,   93,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   33,   -1,   -1,   -1,   -1,   38,
   33,   -1,   41,   -1,   -1,   44,  358,   -1,   41,   -1,
   -1,   44,  364,   -1,   -1,  124,  368,  126,   -1,   58,
   59,   60,   -1,   62,   63,   58,   59,   60,   -1,   62,
   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  394,  395,  396,  397,  398,  399,  400,  401,
  402,   -1,  404,  405,   93,   -1,   -1,   -1,   -1,   -1,
   93,   -1,   -1,   33,   -1,   -1,   -1,   -1,   38,   33,
   -1,   41,   -1,   -1,   44,  358,   -1,   41,   -1,   -1,
   44,  364,   -1,   -1,   -1,  124,   -1,  126,   58,   59,
   60,  124,   62,   63,   58,   59,   60,   -1,   62,   63,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  394,  395,  396,  397,  398,  399,  400,  401,  402,
   -1,  404,  405,   93,   -1,   -1,   -1,   -1,   -1,   93,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   33,   -1,
   -1,   -1,   -1,   -1,   33,   -1,   41,   -1,   -1,   44,
   -1,   -1,   41,   -1,  124,   44,  126,   -1,   -1,   -1,
  124,   -1,  126,   58,   59,   60,   -1,   62,   63,   58,
   59,   60,   -1,   62,   63,   -1,   -1,   -1,   -1,   -1,
  358,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  368,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   93,   -1,
   -1,   -1,   -1,   -1,   93,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  394,  395,  396,  397,
  398,  399,  400,  401,  402,   -1,  404,  405,   -1,  124,
   -1,  126,   -1,   -1,   -1,  124,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  358,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  368,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  394,  395,  396,  397,  398,
  399,  400,  401,  402,   -1,  404,  405,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  358,
   -1,   -1,   -1,   -1,   -1,  358,   -1,   -1,   -1,  368,
   -1,   -1,   -1,   -1,   -1,  368,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  394,  395,  396,  397,   -1,
   -1,  394,  395,  396,  397,  404,  405,   -1,   -1,   -1,
   -1,  404,  405,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  358,   -1,
   -1,   -1,   -1,   -1,  358,   -1,   -1,   -1,  368,   -1,
   -1,   -1,   -1,   -1,  368,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  394,  395,  396,  397,   -1,   -1,
  394,  395,  396,  397,  404,  405,   -1,   -1,   -1,   -1,
  404,  405,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  358,   -1,   -1,   -1,   -1,   -1,  358,
   -1,   -1,   -1,  368,   -1,   -1,   -1,   -1,   -1,  368,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  394,
  395,  396,  397,   -1,   -1,  394,  395,  396,  397,  404,
  405,   -1,   -1,   -1,   -1,  404,  405,
};
#define YYFINAL 74
#ifndef YYDEBUG
#define YYDEBUG 0
#endif
#define YYMAXTOKEN 416
#if YYDEBUG
char *yyIsParser::yyname[] = {
"end-of-file",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
"'!'",0,0,"'$'","'%'","'&'",0,"'('","')'","'*'","'+'","','","'-'","'.'","'/'",0,
0,0,0,0,0,0,0,0,0,"':'","';'","'<'","'='","'>'","'?'","'@'",0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"'['","'\\\\'","']'",0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"'{'","'|'","'}'","'~'",0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
"XX_INCLUDE","XX_USING","XX_EXTERN","XX_FOREIGN","XX_NATIVE","XX_FRIEND",
"XX_PUBLIC","XX_PRIVATE","XX_PROTECTED","XX_CONST","XX_STATIC","XX_AUTO",
"XX_REGISTER","XX_VOLITILE","XX_INTERRUPT","XX_CDECL","XX_PASCAL","XX_PACKED",
"XX_PARALLEL","XX_REMOTE","XX_SHARED","XX_PURE","XX_VIRTUAL","XX_OPERATOR",
"XX_ABSOLUTE","XX_IO","XX_PROCESS","XX_MODULE","XX_MAIN","XX_THREAD",
"XX_SIGNAL","XX_CLASS","XX_NAMESPACE","XX_STRUCT","XX_UNION","XX_ARRAY",
"XX_SET","XX_STRING","XX_SIGNED","XX_UNSIGNED","XX_FLOAT","XX_VOID","XX_ENUM",
"XX_DOUBLE","XX_SHORT","XX_LONG","XX_INT","XX_CHAR","XX_BOOL","XX_TRUE",
"XX_FALSE","XX_WHAT","XX_AT","XX_IS","XX_SUPER","XX_THIS","XX_NEW","XX_DELETE",
"XX_POSITIONOF","XX_SIZEOF","XX_TYPEOF","XX_TEXTOF","XX_NAMESPACEOF",
"XX_NAMEOF","XX_PREFIXOF","XX_POSITIONIS","XX_SIZEIS","XX_TYPEIS","XX_TEXTIS",
"XX_NAMESPACEIS","XX_NAMEIS","XX_PREFIXIS","XX_TEMPLATE","XX_VARIABLE","XX_DO",
"XX_WHILE","XX_UNTIL","XX_REPEAT","XX_FOR","XX_EACH","XX_OF","XX_SWITCH",
"XX_CASE","XX_DEFAULT","XX_IF","XX_ELSE","XX_BEFORE","XX_AFTER","XX_WHEN",
"XX_GOTO","XX_BREAK","XX_CONTINUE","XX_RETURN","XX_TRY","XX_CATCH","XX_THROW",
"XX_WITH","XX_COLONCOLON_AND","XX_COLONCOLON_STAR","XX_COLONCOLON","XX_DOTDOT",
"XX_ELIPSIS","XX_BSLASHBSLASH_SHR","XX_BSLASHBSLASH_SHL","XX_BSLASHBSLASH",
"XX_BSLASHQUESTION","XX_DOTBSLASHQUESTION","XX_DOTQUESTION","XX_ATQUESTION",
"XX_PERCENT_LESS","XX_GREATER_PERCENT","XX_LESS_PERCENT","XX_PERCENT_GREATER",
"XX_ASSIGN","XX_LAND_ASSIGN","XX_LOR_ASSIGN","XX_LXOR_ASSIGN","XX_POW_ASSIGN",
"XX_ROO_ASSIGN","XX_LOG_ASSIGN","XX_SHR_ASSIGN","XX_SHL_ASSIGN","XX_ADD_ASSIGN",
"XX_SUB_ASSIGN","XX_MUL_ASSIGN","XX_DIV_ASSIGN","XX_MOD_ASSIGN","XX_QUO_ASSIGN",
"XX_AND_ASSIGN","XX_OR_ASSIGN","XX_XOR_ASSIGN","XX_RIGHT_OP","XX_LEFT_OP",
"XX_INC_OP","XX_DEC_OP","XX_COM_OP","XX_LCOM_OP","XX_LE_OP","XX_GE_OP",
"XX_NE_OP","XX_EQ_OP","XX_SHR_OP","XX_SHL_OP","XX_POW_OP","XX_ROO_OP",
"XX_LOG_OP","XX_LNOT_OP","XX_LAND_OP","XX_LOR_OP","XX_DEC_LITERAL",
"XX_BIN_LITERAL","XX_HEX_LITERAL","XX_OCT_LITERAL","XX_FLOAT_LITERAL",
"XX_CHAR_LITERAL","XX_TEXT_LITERAL","XX_URI_LITERAL","XX_TEMPLATE_LITERAL",
"XX_ELEMENT_LITERAL","XX_IDENTIFIER",
};
char *yyIsParser::yyrule[] = {
"$accept : file",
"file : file_definitions",
"file_definitions : file_definition file_definitions",
"file_definitions : file_definition",
"file_definition : using",
"file_definition : include",
"file_definition : file_interface_definition",
"file_definition : file_namespace_definition",
"file_definition : file_class_definition",
"file_definition : template_definition",
"file_definition : variable_declaration",
"file_definition : statement_expr",
"using : XX_USING using_identifier ';'",
"using_identifier : uri_identifier document_qualified_class_name",
"using_identifier : uri_identifier",
"include : include_designator include_definitions",
"include_designator : XX_INCLUDE XX_TEXT_LITERAL",
"include_designator : XX_INCLUDE XX_URI_LITERAL",
"include_definitions : file_definitions ';'",
"include_definitions : ';'",
"file_interface_definition : file_interface_designator interface_body",
"file_interface_designator : XX_VIRTUAL XX_CLASS uri_qualified_class_name",
"interface_definition : interface_designator interface_body",
"interface_designator : XX_VIRTUAL XX_CLASS qualified_class_name",
"interface_body : '{' interface_member_definitions '}'",
"interface_body : '{' '}'",
"interface_member_definitions : interface_member_definitions interface_member_definition",
"interface_member_definitions : interface_member_definition",
"interface_member_definition : interface_definition",
"interface_member_definition : class_definition",
"interface_member_definition : interface_template_prototype",
"interface_template_prototype : XX_VIRTUAL template_prototype ';'",
"file_namespace_definition : file_namespace_designator namespace_body",
"file_namespace_designator : XX_NAMESPACE uri_qualified_class_name",
"namespace_definition : namespace_designator namespace_body",
"namespace_designator : XX_NAMESPACE qualified_class_name",
"namespace_body : '{' namespace_member_definitions '}'",
"namespace_body : '{' '}'",
"namespace_member_definitions : namespace_member_definitions namespace_member_definition",
"namespace_member_definitions : namespace_member_definition",
"namespace_member_definition : namespace_definition",
"namespace_member_definition : class_definition",
"namespace_member_definition : template_definition",
"file_class_definition : file_class_designator ':' class_is_list class_body",
"file_class_definition : file_class_designator class_body",
"file_class_designator : XX_CLASS uri_qualified_class_name",
"class_definition : class_designator ':' class_is_list class_body",
"class_definition : class_designator class_body",
"class_designator : XX_CLASS qualified_class_name",
"class_is_list : class_is_list ',' class_is",
"class_is_list : class_is",
"class_is : uri_qualified_class_name",
"class_body : '{' class_member_definitions '}'",
"class_body : '{' '}'",
"class_member_definitions : class_member_definitions class_member_definition",
"class_member_definitions : class_member_definition",
"class_member_definition : class_definition",
"class_member_definition : class_template_definition",
"class_member_definition : variable_declaration",
"class_template_definition : XX_VIRTUAL template_definition",
"class_template_definition : template_definition",
"template_definition : template_prototype compond_statement",
"template_prototype : template_designator parameters",
"template_designator : typed_designator",
"template_designator : untyped_designator",
"typed_designator : type_specification class_name",
"untyped_designator : XX_VOID call_name",
"untyped_designator : XX_TEMPLATE call_name",
"call_name : call_name_identifier",
"call_name_identifier : XX_IDENTIFIER",
"call_name_identifier : XX_TEXT_LITERAL",
"parameters : '(' parameter_list ')'",
"parameters : empty_parameters",
"empty_parameters : '(' ')'",
"parameter_list : parameter_list ',' parameter_item",
"parameter_list : parameter_item",
"parameter_item : type_specification assignment_expr_item",
"parameter_item : assignment_expr_item",
"parameter_item : type_specification class_name",
"parameter_item : class_name",
"assignment_expr_item : class_name '=' conditional_expr",
"statement_expr : statement",
"statement_expr : expr_list ';'",
"statement : if_statement",
"statement : do_statement",
"statement : loop_statement",
"statement : for_statement",
"statement : for_each_statement",
"statement : with_statement",
"statement : switch_statement",
"statement : case_statement",
"statement : compond_statement",
"compond_statement : compond_statement_begin compond_statement_list '}'",
"compond_statement : compond_statement_begin '}'",
"compond_statement_begin : '{'",
"compond_statement_list : compond_statement_list compond_statement_item",
"compond_statement_list : compond_statement_item",
"compond_statement_item : statement_expr",
"if_statement : if_cond statement_expr XX_ELSE statement_expr",
"if_statement : if_cond statement_expr",
"if_cond : if_designator condition",
"if_designator : XX_IF",
"if_designator : XX_IF XX_LNOT_OP",
"do_statement : XX_DO statement_expr do_loop_condition ';'",
"do_loop_condition : XX_WHILE condition",
"do_loop_condition : XX_UNTIL condition",
"loop_statement : loop_type condition statement_expr",
"loop_type : XX_WHILE",
"loop_type : XX_UNTIL",
"condition : '(' expr ')'",
"null_condition : '(' ')'",
"with_statement : XX_WITH arguments statement_expr",
"for_each_statement : XX_FOR XX_EACH condition statement_expr",
"for_each_statement : XX_FOR XX_EACH null_condition statement_expr",
"for_each_statement : XX_FOR XX_EACH '@' condition statement_expr",
"for_each_statement : XX_FOR XX_EACH '@' null_condition statement_expr",
"for_statement : XX_FOR '(' expr ';' expr ';' expr ')' statement_expr",
"switch_statement : switch_condition '{' switch_cases '}'",
"switch_condition : XX_SWITCH condition",
"switch_cases : switch_case_list switch_default",
"switch_cases : switch_case_list",
"switch_cases : switch_default",
"switch_case_list : switch_case_statement_list",
"switch_default : default",
"switch_case_statement_list : switch_case_statement_list switch_case_statement",
"switch_case_statement_list : switch_case_statement",
"switch_case_statement : switch_case_matches statement_expr",
"switch_case_matches : switch_case_matches switch_case_match",
"switch_case_matches : switch_case_match",
"switch_case_match : XX_CASE conditional_expr ':'",
"default : XX_DEFAULT ':' statement_expr",
"case_statement : case '{' cases '}'",
"case : XX_CASE",
"cases : case_list case_default",
"cases : case_list",
"cases : case_default",
"case_list : case_statement_list",
"case_default : default",
"case_statement_list : case_statement_list case_when_statement",
"case_statement_list : case_when_statement",
"case_when_statement : case_when_list statement_expr",
"case_when_list : case_when_list case_when",
"case_when_list : case_when",
"case_when : XX_WHEN conditional_expr ':'",
"variable_declaration : variable_definition ';'",
"variable_definition : variable_designator '=' variable_initializer",
"variable_definition : variable_designator",
"variable_initializer : conditional_expr",
"variable_designator : typed_designator",
"variable_designator : untyped_variable_designator",
"untyped_variable_designator : XX_VARIABLE variable_name",
"untyped_variable_designator : XX_VOID variable_name",
"variable_name : variable_name_identifier",
"variable_name_identifier : XX_IDENTIFIER",
"variable_name_identifier : XX_TEXT_LITERAL",
"type_specification : type_definition",
"type_specification : type_reference",
"type_definition : void_type of_dimentions",
"type_definition : type_reference of_dimentions",
"type_definition : new_type_definition of_dimentions",
"type_definition : new_type_definition",
"new_type_definition : struct_definition",
"struct_definition : struct_designator '{' struct_member_definitions '}'",
"struct_designator : XX_STRUCT",
"struct_designator : XX_UNION",
"struct_member_definitions : struct_member_definitions struct_member_definition",
"struct_member_definitions : struct_member_definition",
"struct_member_definition : variable_declaration",
"of_dimentions : of_dimentions dimentions",
"of_dimentions : dimentions",
"dimentions : '[' dimention_list ']'",
"dimentions : '[' ']'",
"dimention_list : dimention_list ',' dimention_expr",
"dimention_list : ',' dimention_expr",
"dimention_list : dimention_expr",
"dimention_expr : conditional_expr",
"type_reference : XX_CLASS uri_qualified_class_name",
"type_reference : intrinsic_type",
"void_type : XX_VOID",
"intrinsic_type : XX_UNSIGNED",
"intrinsic_type : XX_SIGNED",
"intrinsic_type : XX_SHORT",
"intrinsic_type : XX_LONG",
"intrinsic_type : XX_INT",
"intrinsic_type : XX_FLOAT",
"intrinsic_type : XX_DOUBLE",
"intrinsic_type : XX_STRING",
"intrinsic_type : XX_CHAR",
"intrinsic_type : XX_BOOL",
"uri_qualified_class_name : uri_identifier document_qualified_class_name",
"uri_qualified_class_name : document_qualified_class_name",
"document_qualified_class_name : XX_COLONCOLON class_name XX_COLONCOLON qualified_class_name",
"document_qualified_class_name : XX_COLONCOLON class_name",
"document_qualified_class_name : qualified_class_name",
"uri_identifier : XX_URI_LITERAL",
"qualified_class_name : qualified_class_name XX_COLONCOLON class_name",
"qualified_class_name : class_name",
"class_name : class_identifier",
"class_identifier : XX_IDENTIFIER",
"class_identifier : XX_TEXT_LITERAL",
"expr : typed_assignment_expr",
"typed_assignment_expr : XX_CLASS variable_expr assignment_op assignment_expr",
"typed_assignment_expr : assignment_expr",
"assignment_expr : variable_expr assignment_op assignment_expr",
"assignment_expr : conditional_expr",
"conditional_expr : logical_or_expr '?' conditional_expr ':' conditional_expr",
"conditional_expr : logical_or_expr '!' conditional_expr",
"conditional_expr : logical_or_expr",
"logical_or_expr : logical_or_expr logical_or_op logical_and_expr",
"logical_or_expr : logical_and_expr",
"logical_and_expr : logical_and_expr logical_and_op logical_not_expr",
"logical_and_expr : logical_not_expr",
"logical_not_expr : logical_not_op equality_expr",
"logical_not_expr : equality_expr",
"equality_expr : equality_expr equality_op relational_expr",
"equality_expr : relational_expr",
"relational_expr : relational_expr relational_op or_expr",
"relational_expr : or_expr",
"or_expr : or_expr or_op xor_expr",
"or_expr : xor_expr",
"xor_expr : xor_expr xor_op and_expr",
"xor_expr : and_expr",
"and_expr : and_expr and_op shift_expr",
"and_expr : shift_expr",
"shift_expr : shift_expr shift_op add_expr",
"shift_expr : add_expr",
"add_expr : add_expr add_op mul_expr",
"add_expr : mul_expr",
"mul_expr : mul_expr mul_op pow_expr",
"mul_expr : pow_expr",
"pow_expr : pow_expr pow_op cast_expr",
"pow_expr : cast_expr",
"cast_expr : '(' type_specification ')' cast_expr",
"cast_expr : unary_expr",
"unary_expr : unary_op select_expr",
"unary_expr : select_expr",
"select_expr : select_expr '.' call_identifier arguments",
"select_expr : select_expr '.' call_identifier",
"select_expr : select_expr XX_DOTQUESTION '[' expr ']'",
"select_expr : '.' call_identifier arguments",
"select_expr : '.' call_identifier",
"select_expr : XX_DOTQUESTION '[' expr ']'",
"select_expr : select_expr '@' '[' expr ']'",
"select_expr : select_expr '@' '[' expr XX_ELIPSIS expr ']'",
"select_expr : select_expr '@' '[' '?' expr ']'",
"select_expr : select_expr '@' '[' '<' XX_ELIPSIS ']'",
"select_expr : select_expr '@' '[' XX_ELIPSIS '>' ']'",
"select_expr : select_expr '@' '[' XX_ELIPSIS ']'",
"select_expr : select_expr '@' primary_expr",
"select_expr : select_expr '\\\\' '@' '[' expr ']'",
"select_expr : select_expr '\\\\' '@' '[' expr XX_ELIPSIS expr ']'",
"select_expr : select_expr '\\\\' '@' '[' '?' expr ']'",
"select_expr : select_expr '\\\\' '@' '[' '<' XX_ELIPSIS ']'",
"select_expr : select_expr '\\\\' '@' '[' XX_ELIPSIS '>' ']'",
"select_expr : select_expr '\\\\' '@' '[' XX_ELIPSIS ']'",
"select_expr : select_expr '\\\\' '@' primary_expr",
"select_expr : select_expr '\\\\' '[' expr ']'",
"select_expr : select_expr '\\\\' '[' expr XX_ELIPSIS expr ']'",
"select_expr : select_expr '\\\\' '[' '?' expr ']'",
"select_expr : select_expr '\\\\' '[' '<' XX_ELIPSIS ']'",
"select_expr : select_expr '\\\\' '[' XX_ELIPSIS '>' ']'",
"select_expr : select_expr '\\\\' '[' XX_ELIPSIS ']'",
"select_expr : select_expr '\\\\' primary_expr",
"select_expr : select_expr '\\\\' XX_DOTDOT",
"select_expr : select_expr '[' expr ']'",
"select_expr : select_expr '[' expr XX_ELIPSIS expr ']'",
"select_expr : select_expr '[' '?' expr ']'",
"select_expr : select_expr '[' '<' XX_ELIPSIS ']'",
"select_expr : select_expr '[' XX_ELIPSIS '>' ']'",
"select_expr : select_expr '[' XX_ELIPSIS ']'",
"select_expr : '\\\\' '[' expr ']'",
"select_expr : '\\\\' '[' expr XX_ELIPSIS expr ']'",
"select_expr : '\\\\' '[' '?' expr ']'",
"select_expr : '\\\\' '[' '<' XX_ELIPSIS ']'",
"select_expr : '\\\\' '[' XX_ELIPSIS '>' ']'",
"select_expr : '\\\\' '[' XX_ELIPSIS ']'",
"select_expr : '\\\\' primary_expr",
"select_expr : '@' '[' expr ']'",
"select_expr : '@' '[' expr XX_ELIPSIS expr ']'",
"select_expr : '@' '[' '?' expr ']'",
"select_expr : '@' '[' '<' XX_ELIPSIS ']'",
"select_expr : '@' '[' XX_ELIPSIS '>' ']'",
"select_expr : '@' '[' XX_ELIPSIS ']'",
"select_expr : '@' primary_expr",
"select_expr : '[' expr ']'",
"select_expr : '[' expr XX_ELIPSIS expr ']'",
"select_expr : '[' '?' expr ']'",
"select_expr : '[' '<' XX_ELIPSIS ']'",
"select_expr : '[' XX_ELIPSIS '>' ']'",
"select_expr : '[' XX_ELIPSIS ']'",
"select_expr : XX_DOTDOT",
"select_expr : '.'",
"select_expr : '@' '.'",
"select_expr : primary_expr",
"primary_expr : uri_expr_request_method_identifier_list arguments",
"primary_expr : uri_literal_request_method_identifier_list arguments",
"primary_expr : uri_request_method_identifier_list arguments",
"primary_expr : uri_expr XX_COLONCOLON_STAR value_expr",
"primary_expr : uri_literal XX_COLONCOLON_STAR value_expr",
"primary_expr : uri_expr_method_identifier_list arguments",
"primary_expr : uri_expr XX_BSLASHBSLASH_SHR uri_literal arguments",
"primary_expr : uri_expr XX_BSLASHBSLASH_SHR uri_expr arguments",
"primary_expr : uri_expr arguments call_identifier XX_BSLASHBSLASH parenthetic_expr",
"primary_expr : uri_expr arguments XX_BSLASHBSLASH parenthetic_expr",
"primary_expr : uri_expr arguments",
"primary_expr : uri_expr",
"primary_expr : uri_literal_method_identifier_list arguments",
"primary_expr : uri_literal XX_BSLASHBSLASH_SHR uri_literal arguments",
"primary_expr : uri_literal XX_BSLASHBSLASH_SHR uri_expr arguments",
"primary_expr : uri_literal arguments call_identifier XX_BSLASHBSLASH parenthetic_expr",
"primary_expr : uri_literal arguments XX_BSLASHBSLASH parenthetic_expr",
"primary_expr : uri_literal arguments",
"primary_expr : XX_FOREIGN uri_expr_method_identifier_list arguments",
"primary_expr : XX_FOREIGN uri_literal_method_identifier_list arguments",
"primary_expr : XX_NATIVE uri_expr_method_identifier_list arguments",
"primary_expr : XX_NATIVE uri_literal_method_identifier_list arguments",
"primary_expr : XX_NATIVE call_identifier arguments",
"primary_expr : call_identifier arguments",
"primary_expr : XX_COLONCOLON method_identifier_list arguments",
"primary_expr : method_identifier_list arguments",
"primary_expr : root_expr",
"value_expr : variable_expr",
"value_expr : parenthetic_expr",
"root_expr : prefix_op variable_expr",
"root_expr : variable_expr postfix_op",
"root_expr : variable_expr",
"root_expr : XX_POSITIONIS",
"root_expr : XX_TYPEIS",
"root_expr : XX_TEXTIS",
"root_expr : XX_NAMEIS",
"root_expr : XX_NAMESPACEIS",
"root_expr : XX_PREFIXIS",
"root_expr : reference_expr",
"root_expr : parenthetic_expr",
"root_expr : element_expr",
"root_expr : literal",
"element_expr : compound_element_expr",
"element_expr : begin_element_expr",
"element_expr : end_element_expr",
"element_expr : atomic_element_expr",
"atomic_element_expr : simple_element_expr",
"atomic_element_expr : comment_expr",
"atomic_element_expr : simple_comment_expr",
"compound_element_expr : begin_compound_element_expr compound_element_body end_compound_element_expr",
"compound_element_expr : begin_compound_element_expr end_compound_element_expr",
"compound_element_body : compound_element_body compound_element_body_item",
"compound_element_body : compound_element_body_item",
"compound_element_body_item : compound_element_body_expr",
"compound_element_body_expr : compound_element_expr",
"compound_element_body_expr : atomic_element_expr",
"compound_element_body_expr : XX_PERCENT_GREATER conditional_expr XX_LESS_PERCENT",
"begin_compound_element_expr : begin_element_expr",
"end_compound_element_expr : XX_PERCENT_LESS '/' XX_GREATER_PERCENT",
"begin_element_expr : XX_PERCENT_LESS begin_element_body XX_GREATER_PERCENT",
"end_element_expr : XX_PERCENT_LESS '/' end_element_body XX_GREATER_PERCENT",
"simple_element_expr : XX_PERCENT_LESS begin_element_body '/' XX_GREATER_PERCENT",
"comment_expr : begin_comment comment_body end_comment",
"simple_comment_expr : begin_comment end_comment",
"begin_comment : XX_PERCENT_LESS '!' XX_DEC_OP",
"end_comment : XX_DEC_OP XX_GREATER_PERCENT",
"comment_body : parenthetic_expr",
"comment_body : text_literal",
"begin_element_body : begin_element_name_expr attribute_expr_list",
"begin_element_body : begin_element_name_expr",
"begin_element_name_expr : element_name_expr",
"end_element_body : element_name_expr",
"element_name_expr : element_name_identifier_expr ':' element_name_identifier_expr",
"element_name_expr : element_name_identifier_expr",
"element_name_identifier_expr : parenthetic_expr",
"element_name_identifier_expr : identifier",
"attribute_expr_list : attribute_expr_list attribute_expr",
"attribute_expr_list : attribute_expr",
"attribute_expr : element_name_expr '=' attribute_value_expr",
"attribute_expr : element_name_expr",
"attribute_value_expr : parenthetic_expr",
"attribute_value_expr : text_literal",
"uri_request_method_identifier_list : XX_BSLASHBSLASH XX_COLONCOLON_AND method_identifier_list",
"uri_request_method_identifier_list : XX_BSLASHBSLASH XX_COLONCOLON_AND call_identifier",
"uri_expr_request_method_identifier_list : uri_request_method_expr XX_COLONCOLON_AND method_identifier_list",
"uri_expr_request_method_identifier_list : uri_request_method_expr XX_COLONCOLON_AND call_identifier",
"uri_request_method_expr : uri_expr",
"uri_expr_method_identifier_list : uri_expr XX_COLONCOLON method_identifier_list",
"uri_expr_method_identifier_list : uri_expr_object_identifier",
"uri_expr_object_identifier : uri_expr XX_COLONCOLON call_identifier",
"uri_expr : call_identifier XX_BSLASHBSLASH root_expr",
"uri_expr : XX_BSLASHBSLASH root_expr",
"uri_literal_request_method_identifier_list : uri_literal_request_method_uri XX_COLONCOLON_AND method_identifier_list",
"uri_literal_request_method_identifier_list : uri_literal_request_method_uri XX_COLONCOLON_AND call_identifier",
"uri_literal_request_method_uri : uri_literal",
"uri_literal_method_identifier_list : uri_literal XX_COLONCOLON method_identifier_list",
"uri_literal_method_identifier_list : uri_literal_object_identifier",
"uri_literal_object_identifier : uri_literal XX_COLONCOLON call_identifier",
"method_identifier_list : method_identifier_list XX_COLONCOLON call_identifier",
"method_identifier_list : call_identifier XX_COLONCOLON call_identifier",
"call_identifier : parenthetic_expr",
"call_identifier : literal_identifier",
"call_identifier : identifier",
"parenthetic_expr : '(' expr_list ')'",
"expr_list : expr ',' expr_list",
"expr_list : expr",
"variable_expr : indirection_expr",
"variable_expr : identifier",
"indirection_expr : variable_indirection_expr",
"indirection_expr : parenthetic_indirection_expr",
"indirection_expr : literal_indirection_expr",
"parenthetic_indirection_expr : XX_POW_OP parenthetic_expr",
"parenthetic_indirection_expr : '*' parenthetic_expr",
"literal_indirection_expr : XX_POW_OP literal_identifier",
"literal_indirection_expr : literal_indirection_identifier",
"literal_indirection_identifier : '*' literal_identifier",
"literal_identifier : XX_TEXT_LITERAL",
"variable_indirection_expr : variable_double_indirection_expr",
"variable_indirection_expr : '*' variable_expr",
"variable_double_indirection_expr : XX_POW_OP variable_expr",
"reference_expr : '&' identifier",
"arguments : '(' argument_expr_list ')'",
"arguments : '(' ')'",
"argument_expr_list : argument_expr_list ',' argument_expr",
"argument_expr_list : argument_expr",
"argument_expr : type_specification call_identifier '=' expr",
"argument_expr : type_specification '=' expr",
"argument_expr : call_identifier '=' expr",
"identifier : XX_IDENTIFIER",
"logical_or_op : XX_LOR_OP",
"logical_and_op : XX_LAND_OP",
"or_op : '|'",
"xor_op : '~'",
"and_op : '&'",
"unary_op : XX_SIZEOF",
"unary_op : XX_TYPEOF",
"unary_op : XX_TEXTOF",
"unary_op : '~'",
"assignment_op : '='",
"assignment_op : XX_ASSIGN",
"assignment_op : XX_LAND_ASSIGN",
"assignment_op : XX_LOR_ASSIGN",
"assignment_op : XX_AND_ASSIGN",
"assignment_op : XX_OR_ASSIGN",
"assignment_op : XX_XOR_ASSIGN",
"assignment_op : XX_ADD_ASSIGN",
"assignment_op : XX_SHR_ASSIGN",
"assignment_op : XX_SHL_ASSIGN",
"assignment_op : XX_SUB_ASSIGN",
"assignment_op : XX_MUL_ASSIGN",
"assignment_op : XX_DIV_ASSIGN",
"assignment_op : XX_MOD_ASSIGN",
"assignment_op : XX_POW_ASSIGN",
"assignment_op : XX_ROO_ASSIGN",
"assignment_op : XX_LOG_ASSIGN",
"logical_not_op : XX_LNOT_OP",
"logical_not_op : '!'",
"equality_op : XX_NE_OP",
"equality_op : XX_EQ_OP",
"relational_op : XX_LE_OP",
"relational_op : XX_GE_OP",
"relational_op : '<'",
"relational_op : '>'",
"shift_op : XX_SHR_OP",
"shift_op : XX_SHL_OP",
"add_op : '+'",
"add_op : '-'",
"mul_op : '*'",
"mul_op : '/'",
"mul_op : '$'",
"mul_op : '%'",
"pow_op : XX_POW_OP",
"pow_op : XX_ROO_OP",
"pow_op : XX_LOG_OP",
"prefix_op : prefix_postfix_op",
"postfix_op : prefix_postfix_op",
"prefix_postfix_op : XX_INC_OP",
"prefix_postfix_op : XX_DEC_OP",
"prefix_postfix_op : XX_COM_OP",
"prefix_postfix_op : XX_LCOM_OP",
"prefix_postfix_op : XX_RIGHT_OP",
"prefix_postfix_op : XX_LEFT_OP",
"literal : extern_literal",
"literal : uri_literal",
"literal : template_literal",
"literal : element_literal",
"literal : text_literal",
"literal : dec_literal",
"literal : bin_literal",
"literal : oct_literal",
"literal : hex_literal",
"literal : float_literal",
"extern_literal : XX_EXTERN XX_TEXT_LITERAL XX_URI_LITERAL",
"extern_literal : XX_EXTERN XX_IDENTIFIER XX_URI_LITERAL",
"extern_literal : XX_EXTERN XX_URI_LITERAL",
"uri_literal : XX_TEXT_LITERAL XX_URI_LITERAL",
"uri_literal : XX_IDENTIFIER XX_URI_LITERAL",
"uri_literal : XX_URI_LITERAL",
"template_literal : XX_TEXT_LITERAL XX_TEMPLATE_LITERAL",
"template_literal : XX_IDENTIFIER XX_TEMPLATE_LITERAL",
"template_literal : XX_TEMPLATE_LITERAL",
"element_literal : XX_TEXT_LITERAL element_literal_list",
"element_literal : XX_IDENTIFIER element_literal_list",
"element_literal : element_literal_list",
"element_literal_list : element_literal_item element_literal_list",
"element_literal_list : element_literal_item",
"element_literal_item : XX_ELEMENT_LITERAL",
"text_literal : text_literal_list",
"text_literal_list : text_literal_item text_literal_list",
"text_literal_list : text_literal_item",
"text_literal_item : XX_TEXT_LITERAL",
"dec_literal : XX_DEC_LITERAL",
"bin_literal : XX_BIN_LITERAL",
"oct_literal : XX_OCT_LITERAL",
"hex_literal : XX_HEX_LITERAL",
"float_literal : XX_FLOAT_LITERAL",
};
#endif
#ifndef YYSTYPE
typedef int YYSTYPE;
#endif
#define yyclearin (yychar=(-1))
#define yyerrok (yyerrflag=0)
#ifdef YYSTACKSIZE
#ifndef YYMAXDEPTH
#define YYMAXDEPTH YYSTACKSIZE
#endif
#else
#ifdef YYMAXDEPTH
#define YYSTACKSIZE YYMAXDEPTH
#else
#define YYSTACKSIZE 500
#define YYMAXDEPTH 500
#endif
#endif
#define yystacksize YYSTACKSIZE
#define YYABORT goto yyabort
#define YYACCEPT goto yyaccept
#define YYERROR goto yyerrlab

yyIsParser::yyIsParser()
{
    yyss = 0;
    yyvs = 0;
}

yyIsParser::~yyIsParser()
{
    yyfinish();
}

int yyIsParser::yyinit()
{
    while (!yyss)
        if ((yyss = new short[YYSTACKSIZE]) == 0)
        if (yyoutofmemory())
            return 0;

    while (!yyvs)
        if ((yyvs= new YYSTYPE[YYSTACKSIZE]) == 0)
        if (yyoutofmemory())
            return 0;

    return 1;
}

void yyIsParser::yyfinish()
{
    if (yyvs)
    {
        delete yyvs;
        yyvs = 0;
    }
    if (yyss)
    {
        delete yyss;
        yyss = 0;
    }
}

int yyIsParser::yyoutofmemory()
{
    yyerror("out of memory");
    return 1;
}

void yyIsParser::yyerror(const char *msg)
{
   yyprintf("%s\n",msg);
}

int yyIsParser::yyprintf( const char* format, ... )
{
   va_list arg;
   int result;

   va_start(arg,format);
   result=vprintf(format,arg);
   va_end(arg);
   return result;
}

int yyParser::yyparse()
{
    register int yym, yyn, yystate;
#if YYDEBUG
    register char *yys;
#endif

    yynerrs = 0;
    yyerrflag = 0;
    yychar = (-1);

    if (!yyinit())
        goto yyabort;
    yyssp = yyss;
    yyvsp = yyvs;
    *yyssp = yystate = 0;

yyloop:
    if (yyn = yydefred[yystate]) goto yyreduce;
    if (yychar < 0)
    {
        if ((yychar = yylex()) < 0) yychar = 0;
#if YYDEBUG
        if (yydebug)
        {
            yys = 0;
            if (yychar <= YYMAXTOKEN) yys = yyname[yychar];
            if (!yys) yys = "illegal-symbol";
            yyprintf("yydebug: state %d, reading %d (%s)\n", yystate,
                    yychar, yys);
        }
#endif
    }
    if ((yyn = yysindex[yystate]) && (yyn += yychar) >= 0 &&
            yyn <= YYTABLESIZE && yycheck[yyn] == yychar)
    {
#if YYDEBUG
        if (yydebug)
            yyprintf("yydebug: state %d, shifting to state %d\n",
                    yystate, yytable[yyn]);
#endif
        if (yyssp >= yyss + yystacksize - 1)
        {
            goto yyoverflow;
        }
        *++yyssp = yystate = yytable[yyn];
        *++yyvsp = yylval;
        yychar = (-1);
        if (yyerrflag > 0)  --yyerrflag;
        goto yyloop;
    }
    if ((yyn = yyrindex[yystate]) && (yyn += yychar) >= 0 &&
            yyn <= YYTABLESIZE && yycheck[yyn] == yychar)
    {
        yyn = yytable[yyn];
        goto yyreduce;
    }
    if (yyerrflag) goto yyinrecovery;
#ifdef lint
    goto yynewerror;
#endif
yynewerror:
    yyerror("syntax error");
#ifdef lint
    goto yyerrlab;
#endif
yyerrlab:
    ++yynerrs;
yyinrecovery:
    if (yyerrflag < 3)
    {
        yyerrflag = 3;
        for (;;)
        {
            if ((yyn = yysindex[*yyssp]) && (yyn += YYERRCODE) >= 0 &&
                    yyn <= YYTABLESIZE && yycheck[yyn] == YYERRCODE)
            {
#if YYDEBUG
                if (yydebug)
                    yyprintf("yydebug: state %d, error recovery shifting\
 to state %d\n", *yyssp, yytable[yyn]);
#endif
                if (yyssp >= yyss + yystacksize - 1)
                {
                    goto yyoverflow;
                }
                *++yyssp = yystate = yytable[yyn];
                *++yyvsp = yylval;
                goto yyloop;
            }
            else
            {
#if YYDEBUG
                if (yydebug)
                    yyprintf("yydebug: error recovery discarding state %d\
",
                            *yyssp);
#endif
                if (yyssp <= yyss) goto yyabort;
                --yyssp;
                --yyvsp;
            }
        }
    }
    else
    {
        if (yychar == 0) goto yyabort;
#if YYDEBUG
        if (yydebug)
        {
            yys = 0;
            if (yychar <= YYMAXTOKEN) yys = yyname[yychar];
            if (!yys) yys = "illegal-symbol";
            yyprintf("yydebug: state %d, error recovery discards token %d (%s)\n",
                    yystate, yychar, yys);
        }
#endif
        yychar = (-1);
        goto yyloop;
    }
yyreduce:
#if YYDEBUG
    if (yydebug)
        yyprintf("yydebug: state %d, reducing by rule %d (%s)\n",
                yystate, yyn, yyrule[yyn]);
#endif
    yym = yylen[yyn];
    yyval = yyvsp[1-yym];
    switch (yyn)
    {
case 1:
{ return OnParsedDocument();}
break;
case 16:
{ YY(OnInclude);}
break;
case 17:
{ YY(OnIncludeURI);}
break;
case 21:
{YY(OnInterfaceName);}
break;
case 23:
{YY(OnInterfaceName);}
break;
case 28:
{YY(OnMember);}
break;
case 29:
{YY(OnMember);}
break;
case 30:
{YY(OnMember);}
break;
case 33:
{YY(OnNamespaceName);}
break;
case 35:
{YY(OnNamespaceName);}
break;
case 40:
{YY(OnMember);}
break;
case 41:
{YY(OnMember);}
break;
case 42:
{YY(OnMember);}
break;
case 45:
{YY(OnClassName);}
break;
case 48:
{YY(OnClassName);}
break;
case 51:
{YY(OnClassIs);}
break;
case 56:
{YY(OnMember);}
break;
case 57:
{YY(OnMember);}
break;
case 58:
{YY(OnMember);}
break;
case 61:
{YY(OnTemplate);}
break;
case 63:
{YY(OnTypedTemplateName);}
break;
case 64:
{YY(OnTemplateName);}
break;
case 68:
{YY(OnCallIdentifier);}
break;
case 71:
{YY(OnTemplateParameters);}
break;
case 74:
{YY(OnTemplateParameter);}
break;
case 75:
{YY(OnFirstTemplateParameter);}
break;
case 76:
{YY(OnTypedTemplateParameterValue);}
break;
case 77:
{YY(OnTemplateParameterValue);}
break;
case 78:
{YY(OnTypedTemplateParameterName);}
break;
case 79:
{YY(OnTemplateParameterName);}
break;
case 94:
{YY(OnCompoundStatementBegin);}
break;
case 97:
{YY(OnCompoundStatementItem);}
break;
case 98:
{YY(OnIfElse);}
break;
case 99:
{YY(OnIfThen);}
break;
case 101:
{YY(OnIf);}
break;
case 102:
{YY(OnIfNot);}
break;
case 104:
{YY(OnDoWhile);}
break;
case 105:
{YY(OnDoUntil);}
break;
case 106:
{YY(OnLoop);}
break;
case 107:
{YY(OnWhile);}
break;
case 108:
{YY(OnUntil);}
break;
case 111:
{YY(OnWith);}
break;
case 112:
{YY(OnForEachOf);}
break;
case 113:
{YY(OnForEach);}
break;
case 114:
{YY(OnForEachAttributeOf);}
break;
case 115:
{YY(OnForEachAttribute);}
break;
case 116:
{YY(OnFor);}
break;
case 118:
{YY(OnSwitchCondition);}
break;
case 122:
{YY(OnSwitchCaseList);}
break;
case 123:
{YY(OnSwitchDefault);}
break;
case 126:
{YY(OnSwitchCaseStatement);}
break;
case 127:
{YY(OnSwitchCaseMatch);}
break;
case 128:
{YY(OnSwitchCase);}
break;
case 132:
{YY(OnCase);}
break;
case 136:
{YY(OnCaseList);}
break;
case 137:
{YY(OnCaseDefault);}
break;
case 140:
{YY(OnCaseWhenStatement);}
break;
case 141:
{YY(OnCaseWhenList);}
break;
case 142:
{YY(OnCaseWhen);}
break;
case 145:
{YY(OnVariableInitializer);}
break;
case 148:
{YY(OnTypedVariableName);}
break;
case 149:
{YY(OnVariableName);}
break;
case 152:
{YY(OnVariableIdentifier);}
break;
case 155:
{YY(OnTypeDefinition);}
break;
case 157:
{YY(OnDimentionedTypeReference);}
break;
case 158:
{YY(OnDimentionedTypeReference);}
break;
case 159:
{YY(OnDimentionedTypeDefinition);}
break;
case 163:
{YY(OnStruct);}
break;
case 164:
{YY(OnUnion);}
break;
case 167:
{YY(OnMember);}
break;
case 168:
{YY(OnOfDimentions);}
break;
case 169:
{YY(OnDimentions);}
break;
case 171:
{YY(OnUnboundDimentions);}
break;
case 172:
{YY(OnDimentionList);}
break;
case 173:
{YY(OnUnboundDimention);}
break;
case 174:
{YY(OnDimention);}
break;
case 175:
{YY(OnDimentionExpr);}
break;
case 176:
{YY(OnTypeReference);}
break;
case 178:
{YY2(OnFunction,"void");}
break;
case 179:
{YY2(OnIntrinsicType,"unsigned");}
break;
case 180:
{YY2(OnIntrinsicType,"signed");}
break;
case 181:
{YY2(OnIntrinsicType,"short");}
break;
case 182:
{YY2(OnIntrinsicType,"long");}
break;
case 183:
{YY2(OnIntrinsicType,"int");}
break;
case 184:
{YY2(OnIntrinsicType,"float");}
break;
case 185:
{YY2(OnIntrinsicType,"double");}
break;
case 186:
{YY2(OnIntrinsicType,"string");}
break;
case 187:
{YY2(OnIntrinsicType,"char");}
break;
case 188:
{YY2(OnIntrinsicType,"bool");}
break;
case 189:
{YY(OnURIQualifiedName);}
break;
case 191:
{YY(OnDocumentQualifiedName);}
break;
case 192:
{YY(OnDocumentLevelName);}
break;
case 194:
{YY(OnURIdentifier);}
break;
case 195:
{YY(OnElementQualifiedName);}
break;
case 196:
{YY(OnElementLevelName);}
break;
case 197:
{YY(OnIdentifier);}
break;
case 201:
{YY(OnBinaryExpr);}
break;
case 203:
{YY(OnBinaryExpr);}
break;
case 205:
{YY(OnConditionalExpr);}
break;
case 206:
{YY(OnElseConditionalExpr);}
break;
case 208:
{YY(OnBinaryExpr);}
break;
case 210:
{YY(OnBinaryExpr);}
break;
case 212:
{YY(OnUnaryExpr);}
break;
case 214:
{YY(OnBinaryExpr);}
break;
case 216:
{YY(OnBinaryExpr);}
break;
case 218:
{YY(OnBinaryExpr);}
break;
case 220:
{YY(OnBinaryExpr);}
break;
case 222:
{YY(OnBinaryExpr);}
break;
case 224:
{YY(OnBinaryExpr);}
break;
case 226:
{YY(OnBinaryExpr);}
break;
case 228:
{YY(OnBinaryExpr);}
break;
case 230:
{YY(OnBinaryExpr);}
break;
case 232:
{YY(OnCastExpr);}
break;
case 234:
{YY(OnUnaryExpr);}
break;
case 236:
{YY(OnMethodOfCall);}
break;
case 237:
{YY(OnGetMemberOf);}
break;
case 238:
{YY(OnGetMembersOfWhere);}
break;
case 239:
{YY(OnMethodCall);}
break;
case 240:
{YY(OnGetMember);}
break;
case 241:
{YY(OnGetMembersWhere);}
break;
case 242:
{YY(OnAttributeOfSetAt);}
break;
case 243:
{YY(OnAttributesOfSetRange);}
break;
case 244:
{YY(OnAttributesOfSetWhere);}
break;
case 245:
{YY(OnFirstAttributeOfSet);}
break;
case 246:
{YY(OnLastAttributeOfSet);}
break;
case 247:
{YY(OnAllAttributesOfSet);}
break;
case 248:
{YY(OnAttributeOfSet);}
break;
case 249:
{YY(OnAttributeOfAt);}
break;
case 250:
{YY(OnAttributesOfRange);}
break;
case 251:
{YY(OnAttributesOfWhere);}
break;
case 252:
{YY(OnFirstAttributeOf);}
break;
case 253:
{YY(OnLastAttributeOf);}
break;
case 254:
{YY(OnAllAttributesOf);}
break;
case 255:
{YY(OnAttributeOf);}
break;
case 256:
{YY(OnElementAtExpr);}
break;
case 257:
{YY(OnElementRangeExpr);}
break;
case 258:
{YY(OnElementWhereExpr);}
break;
case 259:
{YY(OnFirstElementExpr);}
break;
case 260:
{YY(OnLastElementExpr);}
break;
case 261:
{YY(OnAllElementsExpr);}
break;
case 262:
{YY(OnElementExpr);}
break;
case 263:
{YY(OnParentElementExpr);}
break;
case 264:
{YY(OnElementAtSetExpr);}
break;
case 265:
{YY(OnElementRangeSetExpr);}
break;
case 266:
{YY(OnElementWhereSetExpr);}
break;
case 267:
{YY(OnFirstElementSetExpr);}
break;
case 268:
{YY(OnLastElementSetExpr);}
break;
case 269:
{YY(OnAllElementsSetExpr);}
break;
case 270:
{YY(OnRootElementAt);}
break;
case 271:
{YY(OnRootElementRange);}
break;
case 272:
{YY(OnRootElementWhere);}
break;
case 273:
{YY(OnFirstRootElement);}
break;
case 274:
{YY(OnLastRootElement);}
break;
case 275:
{YY(OnAllRootElements);}
break;
case 276:
{YY(OnRootElementExpr);}
break;
case 277:
{YY(OnAttributeAt);}
break;
case 278:
{YY(OnAttributeRange);}
break;
case 279:
{YY(OnAttributeWhere);}
break;
case 280:
{YY(OnFirstAttribute);}
break;
case 281:
{YY(OnLastAttribute);}
break;
case 282:
{YY(OnAllAttributes);}
break;
case 283:
{YY(OnAttribute);}
break;
case 284:
{YY(OnElementAt);}
break;
case 285:
{YY(OnElementRange);}
break;
case 286:
{YY(OnElementWhere);}
break;
case 287:
{YY(OnFirstElement);}
break;
case 288:
{YY(OnLastElement);}
break;
case 289:
{YY(OnAllElements);}
break;
case 290:
{YY(OnParentElement);}
break;
case 291:
{YY(OnElementIs);}
break;
case 292:
{YY(OnAttributeIs);}
break;
case 294:
{YY(OnURIMethodIdentifierCall);}
break;
case 295:
{YY(OnURIMethodIdentifierCall);}
break;
case 296:
{YY(OnURIMethodIdentifierCall);}
break;
case 297:
{YY(OnURIRequestMethodCall);}
break;
case 298:
{YY(OnURIRequestMethodCall);}
break;
case 299:
{YY(OnURIMethodCall);}
break;
case 300:
{YY(OnURIURITransform);}
break;
case 301:
{YY(OnURIURITransform);}
break;
case 302:
{YY(OnIdentifierURIContent);}
break;
case 303:
{YY(OnURIContent);}
break;
case 304:
{YY(OnURIArguments);}
break;
case 306:
{YY(OnURIMethodCall);}
break;
case 307:
{YY(OnURIURITransform);}
break;
case 308:
{YY(OnURIURITransform);}
break;
case 309:
{YY(OnIdentifierURIContent);}
break;
case 310:
{YY(OnURIContent);}
break;
case 311:
{YY(OnURIArguments);}
break;
case 312:
{YY(OnURIForeignCall);}
break;
case 313:
{YY(OnURIForeignCall);}
break;
case 314:
{YY(OnURINativeCall);}
break;
case 315:
{YY(OnURINativeCall);}
break;
case 316:
{YY(OnNativeCall);}
break;
case 317:
{YY(OnCall);}
break;
case 318:
{YY(OnDocumentMethodIdentifierCall);}
break;
case 319:
{YY(OnMethodIdentifierCall);}
break;
case 321:
{YY(OnVariable);}
break;
case 323:
{YY(OnUnaryExpr);}
break;
case 324:
{YY(OnPostfixExpr);}
break;
case 325:
{YY(OnVariable);}
break;
case 326:
{YY(OnElementPosition);}
break;
case 327:
{YY(OnElementType);}
break;
case 328:
{YY(OnElementText);}
break;
case 329:
{YY(OnElementName);}
break;
case 330:
{YY(OnElementNamespace);}
break;
case 331:
{YY(OnElementPrefix);}
break;
case 337:
{YY(OnBeginElementExpr);}
break;
case 338:
{YY(OnEndElementExpr);}
break;
case 340:
{YY(OnSimpleElementExpr);}
break;
case 341:
{YY(OnCommentExpr);}
break;
case 342:
{YY(OnSimpleCommentExpr);}
break;
case 347:
{YY(OnCompoundElementExpr);}
break;
case 351:
{YY(OnBeginCompoundElementExpr);}
break;
case 364:
{YY(OnBeginElementNameExpr);}
break;
case 366:
{YY(OnElementPrefixExpr);}
break;
case 367:
{YY(OnElementNameExpr);}
break;
case 372:
{YY(OnAttributeValueExpr);}
break;
case 373:
{YY(OnAttributeNameExpr);}
break;
case 376:
{YY(OnRequestMethodIdentifierList);}
break;
case 377:
{YY(OnRequestURIObjectIdentifier);}
break;
case 379:
{YY(OnURIObjectIdentifier);}
break;
case 380:
{YY(OnRequestMethodURI);}
break;
case 383:
{YY(OnURIObjectIdentifier);}
break;
case 384:
{YY(OnIdentifierURIExpr);}
break;
case 385:
{YY(OnURIExpr);}
break;
case 387:
{YY(OnURIObjectIdentifier);}
break;
case 388:
{YY(OnRequestMethodURI);}
break;
case 391:
{YY(OnURIObjectIdentifier);}
break;
case 392:
{YY(OnMethodIdentifierList);}
break;
case 393:
{YY(OnObjectMethodIdentifierPair);}
break;
case 398:
{YY2(OnBinaryOperator,',');}
break;
case 402:
{YY(OnVariable);}
break;
case 405:
{YY(OnVariable);}
break;
case 407:
{YY(OnVariable);}
break;
case 410:
{YY(OnIdentifierExpr);}
break;
case 411:
{YY(OnVariable);}
break;
case 416:
{YY(OnEmptyArguments);}
break;
case 417:
{YY(OnNextArgument);}
break;
case 418:
{YY(OnFirstArgument);}
break;
case 419:
{YY(OnTypedArgument);}
break;
case 420:
{YY(OnTypeArgument);}
break;
case 421:
{YY(OnArgument);}
break;
case 422:
{YY(OnIdentifierExpr);}
break;
case 423:
{YY2(OnOperator,XX_LOR_OP);}
break;
case 424:
{YY2(OnOperator,XX_LAND_OP);}
break;
case 425:
{YY2(OnOperator,'|');}
break;
case 426:
{YY2(OnOperator,'~');}
break;
case 427:
{YY2(OnOperator,'&');}
break;
case 428:
{YY2(OnOperator,XX_SIZEOF);}
break;
case 429:
{YY2(OnOperator,XX_TYPEOF);}
break;
case 430:
{YY2(OnOperator,XX_TEXTOF);}
break;
case 431:
{YY2(OnOperator,'~');}
break;
case 432:
{YY2(OnOperator,'=');}
break;
case 433:
{YY2(OnOperator,XX_ASSIGN);}
break;
case 434:
{YY2(OnOperator,XX_LAND_ASSIGN);}
break;
case 435:
{YY2(OnOperator,XX_LOR_ASSIGN);}
break;
case 436:
{YY2(OnOperator,XX_AND_ASSIGN);}
break;
case 437:
{YY2(OnOperator,XX_OR_ASSIGN);}
break;
case 438:
{YY2(OnOperator,XX_XOR_ASSIGN);}
break;
case 439:
{YY2(OnOperator,XX_ADD_ASSIGN);}
break;
case 440:
{YY2(OnOperator,XX_SHR_ASSIGN);}
break;
case 441:
{YY2(OnOperator,XX_SHL_ASSIGN);}
break;
case 442:
{YY2(OnOperator,XX_SUB_ASSIGN);}
break;
case 443:
{YY2(OnOperator,XX_MUL_ASSIGN);}
break;
case 444:
{YY2(OnOperator,XX_DIV_ASSIGN);}
break;
case 445:
{YY2(OnOperator,XX_MOD_ASSIGN);}
break;
case 446:
{YY2(OnOperator,XX_POW_ASSIGN);}
break;
case 447:
{YY2(OnOperator,XX_ROO_ASSIGN);}
break;
case 448:
{YY2(OnOperator,XX_LOG_ASSIGN);}
break;
case 449:
{YY2(OnOperator,XX_LNOT_OP);}
break;
case 450:
{YY2(OnOperator,'!');}
break;
case 451:
{YY2(OnOperator,XX_NE_OP);}
break;
case 452:
{YY2(OnOperator,XX_EQ_OP);}
break;
case 453:
{YY2(OnOperator,XX_LE_OP);}
break;
case 454:
{YY2(OnOperator,XX_GE_OP);}
break;
case 455:
{YY2(OnOperator,'<');}
break;
case 456:
{YY2(OnOperator,'>');}
break;
case 457:
{YY2(OnOperator,XX_SHR_OP);}
break;
case 458:
{YY2(OnOperator,XX_SHL_OP);}
break;
case 459:
{YY2(OnOperator,'+');}
break;
case 460:
{YY2(OnOperator,'-');}
break;
case 461:
{YY2(OnOperator,'*');}
break;
case 462:
{YY2(OnOperator,'/');}
break;
case 463:
{YY2(OnOperator,'$');}
break;
case 464:
{YY2(OnOperator,'%');}
break;
case 465:
{YY2(OnOperator,XX_POW_OP);}
break;
case 466:
{YY2(OnOperator,XX_ROO_OP);}
break;
case 467:
{YY2(OnOperator,XX_LOG_OP);}
break;
case 469:
{YY(OnPostfixOperator);}
break;
case 470:
{YY2(OnOperator,XX_INC_OP);}
break;
case 471:
{YY2(OnOperator,XX_DEC_OP);}
break;
case 472:
{YY2(OnOperator,XX_COM_OP);}
break;
case 473:
{YY2(OnOperator,XX_LCOM_OP);}
break;
case 474:
{YY2(OnOperator,XX_RIGHT_OP);}
break;
case 475:
{YY2(OnOperator,XX_LEFT_OP);}
break;
case 486:
{YY(OnExternIdentifierLiteral);}
break;
case 487:
{YY(OnExternIdentifierLiteral);}
break;
case 488:
{YY(OnExternLiteral);}
break;
case 489:
{YY(OnIdentifierURILiteralExpr);}
break;
case 490:
{YY(OnIdentifierURILiteralExpr);}
break;
case 491:
{YY(OnURILiteralExpr);}
break;
case 492:
{YY(OnIdentifierTemplateLiteral);}
break;
case 493:
{YY(OnIdentifierTemplateLiteral);}
break;
case 494:
{YY(OnTemplateLiteral);}
break;
case 495:
{YY(OnIdentifierElementLiteral);}
break;
case 496:
{YY(OnIdentifierElementLiteral);}
break;
case 497:
{YY(OnElementLiteral);}
break;
case 498:
{YY(OnConcatTextLiteral);}
break;
case 501:
{YY(OnTextLiteral);}
break;
case 502:
{YY(OnConcatTextLiteral);}
break;
case 505:
{YY(OnDecimalLiteral);}
break;
case 506:
{YY(OnBinaryLiteral);}
break;
case 507:
{YY(OnOctalLiteral);}
break;
case 508:
{YY(OnHexLiteral);}
break;
case 509:
{YY(OnFloatLiteral);}
break;
    }
    yyssp -= yym;
    yystate = *yyssp;
    yyvsp -= yym;
    yym = yylhs[yyn];
    if (yystate == 0 && yym == 0)
    {
#if YYDEBUG
        if (yydebug)
            yyprintf("yydebug: after reduction, shifting from state 0 to\
 state %d\n", YYFINAL);
#endif
        yystate = YYFINAL;
        *++yyssp = YYFINAL;
        *++yyvsp = yyval;
        if (yychar < 0)
        {
            if ((yychar = yylex()) < 0) yychar = 0;
#if YYDEBUG
            if (yydebug)
            {
                yys = 0;
                if (yychar <= YYMAXTOKEN) yys = yyname[yychar];
                if (!yys) yys = "illegal-symbol";
                yyprintf("yydebug: state %d, reading %d (%s)\n",
                        YYFINAL, yychar, yys);
            }
#endif
        }
        if (yychar == 0) goto yyaccept;
        goto yyloop;
    }
    if ((yyn = yygindex[yym]) && (yyn += yystate) >= 0 &&
            yyn <= YYTABLESIZE && yycheck[yyn] == yystate)
        yystate = yytable[yyn];
    else
        yystate = yydgoto[yym];
#if YYDEBUG
    if (yydebug)
        yyprintf("yydebug: after reduction, shifting from state %d \
to state %d\n", *yyssp, yystate);
#endif
    if (yyssp >= yyss + yystacksize - 1)
    {
        goto yyoverflow;
    }
    *++yyssp = yystate;
    *++yyvsp = yyval;
    goto yyloop;
yyoverflow:
    yyerror("yacc stack overflow");
yyabort:
    return (1);
yyaccept:
    return (0);
}
